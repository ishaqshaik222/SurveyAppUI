{"version":3,"sources":["custom-hooks.ts","ExportCSV.js","Maps/cluster.tsx","fieldWorkers.tsx","Screens/ActionDetails.tsx","Helpers/Constants.tsx","Screens/Reports.tsx","Screens/ReportResults.tsx","Constants.js","grillDownData.tsx","ApproveUsers.tsx","getReports.tsx","getReportDetails.tsx","State/Reducer.tsx","State/Store.tsx","Screens/Login.tsx","Screens/Dashboard.tsx","Screens/Signup.tsx","Navigator/Navigation.tsx","App.tsx","index.tsx"],"names":["useQueryParams","window","location","search","hash","React","useMemo","URLSearchParams","split","ExportToCSV","csvData","fileName","variant","onClick","e","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","type","data","Blob","FileSaver","exportToCSV","excel","Sno","Respodent","Mobile","DateTime","Latitude","Longitude","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","A11","A12","A13","A14","A15","A16","A17","A18","A19","A20","A21","A22","RecordId","AuditStatus","Comments","GoogleApiWrapper","apiKey","google","queryParams","navigate","useNavigate","useState","get","moment","format","toDate","setToDate","fromDate","setFromDate","surveyData","setSurveyData","surveyDataLoading","setSurveyDataLoading","called","setCalled","excelLogs1","setexcelLogs1","excelLogs","getSurveyData","a","fetch","method","headers","body","JSON","stringify","uid","to","from","state","assembly","res","console","log","json","status","response","REPORT","i","length","excel1","undefined","toString","RESPONDENT","MOBILE","DATETIME","LAT","LONGITUDE","RECORD_ID","AUDIT_STATUS","COMMENTS","push","error","useEffect","className","htmlFor","name","value","placeholder","onChange","target","Table","striped","hover","size","map","index","Button","managerId","sessionStorage","setItem","href","actionOnCLick","initialCenter","lat","lng","containerStyle","width","height","mapTypeControl","streetViewControl","marker","label","title","toLowerCase","position","FieldWorkers","fieldWorkers","setFieldWorkersData","fieldWorkerLoading","setFieldWorkerLoading","getFieldWorkers","manager_id","style","cursor","id","date","navigationData","handleClick","ID","FIRST_NAME","DATE","STATE","ASSEMBLY","SURVEYS","ActionDetails","RID","useParams","sessionDetails","getItem","parse","userId","formData","setFormData","onChangeText","useCallback","key","prev","Form","onSubmit","alert","urlParams","Group","controlId","Label","Control","readOnly","Select","dp","comments","auditType","BASE_URL","Reports","setData","fetchReportsData","then","text","result","resultData","catch","display","alignItems","justifyContent","flexDirection","bordered","item","query","ReportResults","props","useLocation","setHeaders","rowData","setRowData","fetchReportResultData","URL","Object","keys","rowItem","headerItem","config","url","API_URL","GrillDownData","grillDownWorkers","setGrillDownWorkersData","getgrillDownWorkers","STATE_CD","STATUS","ApproveUsers","users","firstName","lastName","phoneNumber","emailAddress","GetReports","reportWorkers","setReportWorkersData","getreportWorkers","code","ASSEMBLY_CODE","ASSEMBLY_NAME","COMPLETED","InterviewerName","InterviewerMobile","RespodentMobile","AssemblyCode","AssemblyName","AUDITOR","reportDetailsWorker","setReportDetailsWorkerData","getreportDetailsWorker","RESPONDENT_MOBILE","LATITUDE","top","background","LAT_LONG_TYPE","BOOT_NO","icon","Reducer","action","user","payload","initialState","email","userName","phone","gender","dob","maritalStatus","countryCode","Context","createContext","Store","children","useReducer","dispatch","Provider","Login","useContext","Container","fluid","Row","required","defaultValue","Feedback","password","Stack","direction","gap","dbResponse","USERNAME","sessionData","Dashboard","Card","float","marginTop","marginLeft","Body","Title","Text","SignUp","username","fname","lname","mname","onSignup","Navigation","Navbar","bg","fixed","Brand","Toggle","Collapse","clear","path","element","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0c9fb62.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const useQueryParams = () => {\n  const { search, hash } = window.location;\n\n  return React.useMemo(\n    () => new URLSearchParams(hash ? `?${hash.split(\"?\")[1]}` : search),\n    [search, hash]\n  );\n};\n","import React from \"react\";\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\nimport { Container, Stack } from \"react-bootstrap\";\r\n\r\nexport const ExportToCSV =({csvData,fileName})=>{\r\n\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n        const fileExtension = '.xlsx';\r\n        \r\n        const exportToCSV=(csvData,fileName)=>{\r\n            debugger\r\n            const ws=XLSX.utils.json_to_sheet (csvData);\r\n            const wb=  { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n            const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n            const data= new Blob([excelBuffer], {type:fileType});\r\n            FileSaver.saveAs(data, fileName + fileExtension);\r\n\r\n          }\r\n\r\n          return(\r\n\r\n                <button variant=\"secondary\" onClick={(e)=>exportToCSV(csvData,fileName)}>Export</button>\r\n\r\n             \r\n          )\r\n        \r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  Map,\r\n  Marker,\r\n  IProvidedProps,\r\n  GoogleApiWrapper,\r\n} from \"google-maps-react\";\r\nimport moment from \"moment\";\r\nimport { useQueryParams } from \"../custom-hooks\";\r\nimport { Button,Table} from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {ExportToCSV} from '../ExportCSV';\r\n\r\n\r\nconst BASE_URL = \"http://3.109.197.149/projects/survey_app/api\";\r\n\r\n\r\n\r\ninterface Props extends IProvidedProps {}\r\n\r\nexport class excel{\r\n  Sno:string=\"\";\r\n  Respodent:string=\"\";\r\n  Mobile:string=\"\";\r\n  DateTime:string=\"\";\r\n  Latitude:string=\"\";\r\n  Longitude:string=\"\";\r\n  A1:string=\"\";\r\n  A2:string=\"\";\r\n  A3:string=\"\";\r\n  A4:string=\"\";\r\n  A5:string=\"\";\r\n  A6:string=\"\";\r\n  A7:string=\"\";\r\n  A8:string=\"\";\r\n  A9:string=\"\";\r\n  A10:string=\"\";\r\n  A11:string=\"\";\r\n  A12:string=\"\";\r\n  A13:string=\"\";\r\n  A14:string=\"\";\r\n  A15:string=\"\";\r\n  A16:string=\"\";\r\n  A17:string=\"\";\r\n  A18:string=\"\";\r\n  A19:string=\"\";\r\n  A20:string=\"\";\r\n  A21:string=\"\";\r\n  A22:string=\"\";\r\n  RecordId:string=\"\";\r\n  AuditStatus:string=\"\";\r\n  Comments:string=\"\";\r\n\r\n}\r\n\r\nconst Cluster = ({ google }: Props) => {\r\n  const queryParams = useQueryParams();\r\n  const navigate = useNavigate();\r\n  const [toDate, setToDate] = useState(\r\n    queryParams.get(\"date\") || moment().format(\"YYYY-MM-DD\")\r\n  );\r\n  const [fromDate, setFromDate] = useState(\r\n    queryParams.get(\"date\") || moment().format(\"YYYY-MM-DD\")\r\n  );\r\n\r\n  const [surveyData, setSurveyData] = useState<any[]>([]);\r\n\r\n\r\n  const [surveyDataLoading, setSurveyDataLoading] = useState(false);\r\n\r\n  const [called, setCalled] = useState(false);\r\n\r\n  const [excelLogs1, setexcelLogs1] = useState([]);\r\n\r\n  const filename='Field-Works'\r\n\r\n   const excelLogs:any=[];\r\n\r\n  const getSurveyData = async () => {\r\n    try {\r\n      setCalled(false);\r\n      setSurveyDataLoading(true);\r\n\r\n      const res = await fetch(`${BASE_URL}/getSurveyData.php`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          uid: queryParams.get(\"id\"),\r\n          to: toDate,\r\n          from: fromDate,\r\n          state: queryParams.get(\"state\"),\r\n          assembly: queryParams.get(\"assembly\"),\r\n        }),\r\n      });\r\n      debugger\r\n      console.log(res)\r\n      const json = await res.json();\r\n      \r\n      if (json.status === \"ERROR\") {\r\n        setSurveyData([]);\r\n        return;\r\n      }\r\n      setSurveyData(json.response.REPORT);\r\n\r\n      for (let i = 0; i <= json.response.REPORT.length; i++) {\r\n\r\n        const excel1=new excel();\r\n        if(json.response.REPORT[i]!=undefined){\r\n\r\n          excel1.Sno=(i+1).toString();\r\n          excel1.Respodent=json.response.REPORT[i].RESPONDENT;\r\n          excel1.Mobile=json.response.REPORT[i].MOBILE;\r\n          excel1.DateTime=json.response.REPORT[i].DATETIME;\r\n          excel1.Latitude=json.response.REPORT[i].LAT;\r\n          excel1.Longitude=json.response.REPORT[i].LONGITUDE;\r\n          excel1.A1=json.response.REPORT[i].A1;\r\n          excel1.A2=json.response.REPORT[i].A2;\r\n          excel1.A3=json.response.REPORT[i].A3;\r\n          excel1.A4=json.response.REPORT[i].A4;\r\n          excel1.A5=json.response.REPORT[i].A5;\r\n          excel1.A6=json.response.REPORT[i].A6;\r\n          excel1.A7=json.response.REPORT[i].A7;\r\n          excel1.A8=json.response.REPORT[i].A8;\r\n          excel1.A9=json.response.REPORT[i].A9;\r\n          excel1.A10=json.response.REPORT[i].A10;\r\n          excel1.A11=json.response.REPORT[i].A11;\r\n          excel1.A12=json.response.REPORT[i].A12;\r\n          excel1.A13=json.response.REPORT[i].A13;\r\n          excel1.A14=json.response.REPORT[i].A14;\r\n          excel1.A15=json.response.REPORT[i].A15;\r\n          excel1.A16=json.response.REPORT[i].A16;\r\n          excel1.A17=json.response.REPORT[i].A17;\r\n          excel1.A18=json.response.REPORT[i].A18;\r\n          excel1.A19=json.response.REPORT[i].A19;\r\n          excel1.A20=json.response.REPORT[i].A20;\r\n          excel1.A21=json.response.REPORT[i].A21;\r\n          excel1.A22=json.response.REPORT[i].A22;\r\n          excel1.RecordId=json.response.REPORT[i].RECORD_ID;\r\n          excel1.AuditStatus=json.response.REPORT[i].AUDIT_STATUS;\r\n          excel1.Comments=json.response.REPORT[i].COMMENTS;\r\n\r\n          excelLogs.push(excel1);\r\n\r\n        }\r\n        debugger\r\n      }\r\n    } catch (error) {\r\n      console.log({ error });\r\n    } finally {\r\n      setCalled(true);\r\n      setSurveyDataLoading(false);\r\n    }\r\n    setexcelLogs1(excelLogs);\r\n  };\r\n\r\n  const id =  queryParams.get(\"id\")?.toString();\r\n\r\n  const actionOnCLick = (data:any)=>{\r\n    const managerId =  queryParams.get(\"managerId\")?.toString();\r\n    sessionStorage.setItem(\"detailsURL\", window.location.href.split('/#/')[1])\r\n    navigate(`/actions?RId=${data.RECORD_ID}&managerId=${managerId}`);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getSurveyData();\r\n  }, [fromDate, toDate]);\r\n\r\n \r\n  return (\r\n    <div className=\"container p-5\">\r\n      <div className=\"col-md-8 my-5\">\r\n        <div className=\"row p-2\">\r\n          <h1>\r\n            Showing {surveyData.length} records for {queryParams.get(\"name\")}\r\n          </h1>\r\n        </div>\r\n        <div className=\"row p-2\">\r\n          <div className=\"col-md-3\">\r\n            <label htmlFor=\"from\">From Date</label>\r\n          </div>\r\n\r\n          <input\r\n            name=\"from\"\r\n            type=\"date\"\r\n            value={fromDate}\r\n            className=\"col-md-3\"\r\n            placeholder=\"Calendar\"\r\n            onChange={(e) => setFromDate(e.target.value)}\r\n          />\r\n\r\n          <label className=\"col-md-3\" htmlFor=\"to\">\r\n            To Date\r\n          </label>\r\n          <input\r\n            name=\"to\"\r\n            type=\"date\"\r\n            value={toDate}\r\n            className=\"col-md-3\"\r\n            placeholder=\"Calendar\"\r\n            onChange={(e) => setToDate(e.target.value)}\r\n          />\r\n          <div className=\"col-md-3\">\r\n                <ExportToCSV csvData={excelLogs1} fileName={filename} />\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n\r\n      {surveyDataLoading && <h1>Loading...</h1>}\r\n\r\n      {called && surveyData.length === 0 && <h1>No Data found!</h1>}\r\n\r\n      {surveyData.length > 0 && (\r\n        <>\r\n          <div className=\"row\">\r\n            <Table striped hover size=\"sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Actions</th>\r\n                  <th>#</th>\r\n                  <th>Respondent</th>\r\n                  <th>Mobile</th>\r\n                  <th>Date Time</th>\r\n                  <th>Latitude</th>\r\n                  <th>Longitude</th>\r\n                  <th>A1</th>\r\n                  <th>A2</th>\r\n                  <th>A3</th>\r\n                  <th>A4</th>\r\n                  <th>A5</th>\r\n                  <th>A6</th>\r\n                  <th>A7</th>\r\n                  <th>A8</th>\r\n                  <th>A9</th>\r\n                  <th>A10</th>\r\n                  <th>A11</th>\r\n                  <th>A12</th>\r\n                  <th>A13</th>\r\n                  <th>A14</th>\r\n                  <th>A15</th>\r\n                  <th>A16</th>\r\n                  <th>A17</th>\r\n                  <th>A18</th>\r\n                  <th>A19</th>\r\n                  <th>A20</th>\r\n                  <th>A21</th>\r\n                  <th>A22</th>\r\n                  <th>RECORD_ID</th>\r\n                  <th>Audit Status</th>\r\n                  <th>Comments</th>\r\n\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {surveyData.map((data, index) => (\r\n                  <tr key={index}>\r\n                    <td>\r\n                    <Button variant=\"secondary\"  onClick={() =>\r\n                 actionOnCLick(data)\r\n                \r\n                }\r\n                >Action</Button >{' '}\r\n                    </td>\r\n                    <td>{index + 1}</td>\r\n                    <td>{data.RESPONDENT}</td>\r\n                    <td>{data.MOBILE}</td>\r\n                    <td>{data.DATETIME}</td>\r\n                    <td>{data.LAT}</td>\r\n                    <td>{data.LONGITUDE}</td>\r\n\r\n                    <td>{data.A1}</td>\r\n                    <td>{data.A2}</td>\r\n                    <td>{data.A3}</td>\r\n                    <td>{data.A4}</td>\r\n                    <td>{data.A5}</td>\r\n                    <td>{data.A6}</td>\r\n                    <td>{data.A7}</td>\r\n                    <td>{data.A8}</td>\r\n                    <td>{data.A9}</td>\r\n                    <td>{data.A10}</td>\r\n                    <td>{data.A11}</td>\r\n                    <td>{data.A12}</td>\r\n                    <td>{data.A13}</td>\r\n                    <td>{data.A14}</td>\r\n                    <td>{data.A15}</td>\r\n                    <td>{data.A16}</td>\r\n                    <td>{data.A17}</td>\r\n                    <td>{data.A18}</td>\r\n                    <td>{data.A19}</td>\r\n                    <td>{data.A20}</td>\r\n                    <td>{data.A21}</td>\r\n                    <td>{data.A22}</td>\r\n                    <td>{data.RECORD_ID}</td>\r\n                    <td>{data.AUDIT_STATUS}</td>\r\n                    <td>{data.COMMENTS}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n</Table>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <Map\r\n              google={google}\r\n              initialCenter={{\r\n                lat: surveyData[0].LAT,\r\n                lng: surveyData[0].LONGITUDE,\r\n              }}\r\n              containerStyle={{ width: \"80vw\", height: \"80vh\" }}\r\n              // @ts-ignore\r\n              mapTypeControl={false}\r\n              streetViewControl={false}\r\n            >\r\n              {surveyData.map((marker, index) => {\r\n                return (\r\n                  <Marker\r\n                    key={index}\r\n                    // @ts-ignore\r\n                    label={`${index + 1}`}\r\n                    // @ts-ignore\r\n                    title={`${index + 1} ${marker.RESPONDENT.toLowerCase()} (${\r\n                      marker.MOBILE\r\n                    }) ${marker.DATETIME}`}\r\n                    position={{\r\n                      lat: marker.LAT,\r\n                      lng: marker.LONGITUDE,\r\n                    }}\r\n                  />\r\n                );\r\n              })}\r\n            </Map>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyCE1xTn0k-vpSWBSLyfL47GonM-hvX-Y2g\",\r\n})(Cluster);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useQueryParams } from \"./custom-hooks\";\n\nconst BASE_URL = \"http://3.109.197.149/projects/survey_app/api\";\n\nexport const FieldWorkers = () => {\n  const queryParams = useQueryParams();\n\n  const [fieldWorkers, setFieldWorkersData] = useState<any[]>([]);\n  const [fieldWorkerLoading, setFieldWorkerLoading] = useState(false);\n\n  const getFieldWorkers = async () => {\n    try {\n      setFieldWorkerLoading(true);\n      const res = await fetch(`${BASE_URL}/getFieldWorkers.php`, {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          manager_id: queryParams.get(\"managerId\"),\n        }),\n      });\n\n      const json = await res.json();\n      if(json.response !=='SURVEY_LIST_EMPTY'){\n      setFieldWorkersData(json.response.REPORT);\n    }else{ }\n    } catch (error) {\n      console.log({ error });\n    } finally {\n      setFieldWorkerLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getFieldWorkers();\n  }, []);\n\n  const navigate = useNavigate();\n\n  const handleClick = (\n    id: string,\n    name: string,\n    date: string,\n    state: string,\n    assembly: string\n  ) => {\n    let navigationData =`/details?id=${id}&name=${name}&date=${date}&state=${state}&assembly=${assembly}&managerId=${queryParams.get(\"managerId\")}`\n    navigate(`/details?id=${id}&name=${name}&date=${date}&state=${state}&assembly=${assembly}&managerId=${queryParams.get(\"managerId\")}`,{ state:navigationData  });\n  };\n\n  if (fieldWorkerLoading) {\n    return <h1>Loading...</h1>;\n  }\n\n  if (fieldWorkers?.length === 0) {\n    return <h1 >No Data found!</h1>;\n  }\n\n  return (\n    <div className=\"container p-5\">\n      <div className=\"row\">\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Date</th>\n              <th>Field Worker</th>\n              <th>Surveys</th>\n              <th>Mobile</th>\n              <th>State</th>\n              <th>Assembly</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {fieldWorkers.map((data, index) => (\n              <tr\n                key={index}\n                style={{ cursor: \"pointer\" }}\n                onClick={() =>\n                  handleClick(\n                    data.ID,\n                    data.FIRST_NAME,\n                    data.DATE,\n                    data.STATE,\n                    data.ASSEMBLY\n                  )\n                }\n              >\n                <td>{index + 1}</td>\n                <td>{data.DATE}</td>\n                <td>{data.FIRST_NAME}</td>\n                <td>{data.SURVEYS}</td>\n                <td>{data.MOBILE}</td>\n                <td>{data.STATE}</td>\n                <td>{data.ASSEMBLY}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","import { useEffect, useState,useCallback } from \"react\";\r\nimport {\r\n  Map,\r\n  Marker,\r\n  IProvidedProps,\r\n  GoogleApiWrapper,\r\n} from \"google-maps-react\";\r\nimport moment from \"moment\";\r\nimport { useQueryParams } from \"../custom-hooks\";\r\nimport { Button,Table,Form} from \"react-bootstrap\";\r\nimport { useNavigate, useParams  } from \"react-router-dom\";\r\n\r\nconst ActionDetails = () => {\r\n    debugger;\r\n    const navigate = useNavigate();\r\n    const params = useParams();\r\n    \r\n    // let history = useNavigate ();\r\n    // const goToPreviousPath = () => {\r\n        \r\n    // }\r\nconst BASE_URL = \"http://3.109.197.149/projects/survey_app/api\";\r\n    const queryParams = useQueryParams();\r\n    const RID =  queryParams.get(\"RId\")?.toString();\r\n\r\n    let sessionDetails = sessionStorage.getItem('userDetails') !=null ?  JSON.parse(sessionStorage.getItem('userDetails') || '{}') : {}\r\n\r\n    const [formData, setFormData] = useState({\r\n        \r\n        'recordId':RID,\r\n        'comments':\"\",\r\n        'auditType':\"\",\r\n        'status':\"Valid\",\r\n        'createdBy': sessionDetails.userId,\r\n\r\n    })\r\n    const onSubmit = () => {\r\n      console.log(formData)\r\n      getFieldWorkers();\r\n      alert('Data Submitted Successfully');\r\n      let urlParams = sessionStorage.getItem(\"detailsURL\")?.toString();\r\n      navigate(\"/\"+urlParams);\r\n    }\r\n    const onChangeText = useCallback((key,value) => {\r\n        console.log(\"value\",value)\r\n        setFormData((prev)=>{\r\n            return{\r\n                ...prev,\r\n                [key]: value,\r\n            }\r\n        })\r\n    }, [formData])\r\n\r\n    const getFieldWorkers = async () => {\r\n        try {\r\n       \r\n          const res = await fetch(`${BASE_URL}/saveActionComments.php`, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"content-type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(\r\n                formData\r\n            ),\r\n          });\r\n    \r\n        \r\n        \r\n        } catch (error) {\r\n          console.log({ error });\r\n        } finally {\r\n          \r\n        }\r\n      };\r\n\r\n    //   useEffect(() => {\r\n    //     getFieldWorkers();\r\n    //   }, []);\r\n    return (\r\n        <div className=\"container p-5\">\r\n        <div className=\"row\">\r\n        <div>\r\n            <Form onSubmit={onSubmit}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Record Id</Form.Label>\r\n                    <Form.Control  value={RID} type=\"text\" placeholder=\"Record Id\" readOnly  />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicStatus\">\r\n                    <Form.Label>Status</Form.Label>\r\n                            <Form.Select aria-label=\"Default select example\" onChange={(dp)=>onChangeText('status',dp.target.value)}>\r\n                               \r\n                                <option value=\"Valid\">Valid</option>\r\n                                <option value=\"In Valid\">In Valid</option>\r\n                                <option value=\"Need Review\">Need Review</option>\r\n                            </Form.Select>\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicComments\" >\r\n                    <Form.Label>Comments</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Comments\"  value={formData.comments} onChange={(value)=>onChangeText('comments',value.target.value)} />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicComments\">\r\n                    <Form.Label>Auditor Type</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Auditor Type\" value={formData.auditType} onChange={(value)=>onChangeText('auditType',value.target.value)}  />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActionDetails","const BASE_URL = \"http://3.109.197.149/projects/survey_app/api\"; \r\n//const BASE_URL = \"http://127.0.0.1:300/survey_app/api\"; \r\n\r\nexport default BASE_URL;","import React, { useEffect, useState } from 'react'\r\nimport { Table } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport BASE_URL from \"../Helpers/Constants\";\r\n\r\nconst Reports=()=>{\r\n    const navigate = useNavigate();\r\n    const [data, setData] = useState([])\r\n    const fetchReportsData = async () => {\r\n        const URL = `${BASE_URL}/getReportsIndividual.php`\r\n        fetch(`${BASE_URL}/getReportsIndividual.php`,  {\r\n            method: 'GET',\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n              },\r\n          })\r\n            .then(response => response.text())\r\n            .then(result => {\r\n                let resultData = JSON.parse(result);\r\n                // console.log('result',resultData)\r\n                setData(resultData.response.REPORT)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n        };\r\n    \r\n    const submitQuery=(query: any)=>{\r\n        navigate('/report-results', { state: query });\r\n    }\r\n    useEffect(() => {\r\n        fetchReportsData()\r\n    }, [])\r\n    return (\r\n        <div style={{display:'flex',\r\n                     alignItems: 'center',\r\n                     justifyContent: 'center',\r\n                     flexDirection: 'column'\r\n                     }}>\r\n            <h1>Reports</h1>             \r\n            <div style={{width:'90vw'}}>\r\n                <Table bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                    <th>#</th>\r\n                    <th>MODULE</th>\r\n                    <th>REPORT_NAME</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                // JSON.stringify(data)\r\n                data.map((item,index)=>{\r\n                    return (\r\n                        <tr key={index.toString()}>\r\n                        <td >{index+1}</td>\r\n                        <td>{item['MODULE']} </td>\r\n                        <td>{item['REPORT_NAME']} </td>\r\n                        <td><button onClick={()=>{submitQuery(item['QUERY'])}}>Pull Report</button></td>\r\n                        </tr>\r\n                    )\r\n                    })\r\n                }\r\n                </tbody>\r\n                </Table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reports\r\n","import { useEffect, useState } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport BASE_URL from \"../Helpers/Constants\";\r\n\r\nconst ReportResults=(props:any)=> {\r\n    const { state } = useLocation();\r\n    const [headers, setHeaders] = useState<Array<string>>([]);\r\n    const [rowData, setRowData] = useState<Array<string>>([]);\r\n\r\n    const fetchReportResultData = async () => {\r\n        const URL = `${BASE_URL}/getReportsResults.php`\r\n        fetch(URL, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n              },\r\n            body: JSON.stringify({\r\n                query: state,\r\n            }),\r\n          })\r\n            .then(response => response.text())\r\n            .then(result => {\r\n                let resultData = JSON.parse(result);\r\n                const headers = Object.keys(resultData.response[0]);\r\n                console.log('row data', resultData.response)\r\n                console.log('headers', headers)\r\n                setRowData(resultData.response)\r\n                setHeaders(headers)\r\n                // setData(resultData.response.REPORT)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n        };\r\n    useEffect(() => {\r\n        fetchReportResultData()\r\n    }, [])\r\n    return (\r\n        // <div style={{display:'flex',\r\n        //              alignItems: 'center',\r\n        //              justifyContent: 'center',\r\n        //              flexDirection: 'column'\r\n        //              }}>\r\n        //     <h1>Reports</h1>             \r\n        //     <div style={{width:'90vw'}}>\r\n                // <Table bordered hover>\r\n                // <thead>\r\n                //     <tr>\r\n                //     <th>#</th>\r\n                //     <th>ACCESS_LEVEL</th>\r\n                //     <th>MODULE</th>\r\n                //     <th>REPORT_ID</th>\r\n                //     <th>REPORT_NAME</th>\r\n                //     <th>QUERY</th>\r\n                //     </tr>\r\n                // </thead>\r\n                // <tbody>\r\n                //     <tr>\r\n                //     <td>{index+1}</td>\r\n                //     <td>{item['ACCESS_LEVEL']} </td>\r\n                //     <td>{item['MODULE']} </td>\r\n                //     <td>{item['REPORT_ID']} </td>\r\n                //     <td>{item['REPORT_NAME']} </td>\r\n                //     <td>{item['QUERY']} </td>\r\n                //     <td><button onClick={()=>{submitQuery(item['QUERY'])}}>Execute</button></td>\r\n                //     </tr>\r\n                // </tbody>\r\n                // </Table>\r\n        //     </div>\r\n        // </div>\r\n\r\n\r\n        <div style={{display:'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column'\r\n        }} >\r\n            <div style={{width:'90vw'}}>\r\n            <h1>Reports Results</h1>\r\n            <Table bordered hover>\r\n                <thead>\r\n               \r\n                    {\r\n                \r\n                headers.length > 0 ? \r\n                <tr>\r\n                    {\r\n                    headers.map((item, index)=>{\r\n                        return (<th>{item}</th>)\r\n                    })}\r\n                </tr>\r\n                :\r\n                <></>\r\n                    }\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        rowData.length >0 ? \r\n                            rowData.map((rowItem,index)=>{\r\n                                return (\r\n                                    <tr key={index.toString()}> \r\n                                    {headers.map((headerItem:any,index:any)=>{\r\n                                        return <td>{rowItem[headerItem]} </td>\r\n                                    })}\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        :\r\n                        <></>\r\n                    }\r\n                </tbody>\r\n                </Table>\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReportResults\r\n","const prod = {\r\n    url: {\r\n        API_URL: 'http://3.109.197.149/projects/survey_app/api'\r\n    }\r\n};\r\n\r\nconst dev = {\r\n    url: {\r\n        API_URL: 'http://3.109.197.149/projects/survey_app/api'\r\n    }\r\n};\r\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useQueryParams } from \"./custom-hooks\";\r\nimport { config } from './Constants';\r\n\r\nconst BASE_URL = config.url.API_URL\r\n\r\n//const BASE_URL = \"http://localhost/folkslogic/survey_app/api\";\r\n\r\nexport const GrillDownData = () => {\r\n  const queryParams = useQueryParams();\r\n  const managerId =  queryParams.get(\"managerId\")?.toString();\r\n  const [grillDownWorkers, setGrillDownWorkersData] = useState<any[]>([]);\r\n  const [fieldWorkerLoading, setFieldWorkerLoading] = useState(false);\r\n\r\n\r\n\r\n  const getgrillDownWorkers = async () => {\r\n    try {\r\n      setFieldWorkerLoading(true);\r\n\r\n      const res = await fetch(`${BASE_URL}/getAssemblyGrillData.php`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        }\r\n      });\r\n\r\n      const json = await res.json();\r\n\r\n      setGrillDownWorkersData(json.response.REPORT);\r\n    } catch (error) {\r\n      console.log({ error });\r\n    } finally {\r\n      setFieldWorkerLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getgrillDownWorkers();\r\n  }, []);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleClick = (\r\n    state: string,\r\n    status: string\r\n  ) => {\r\n    navigate(\r\n      `/get-reports?state=${state}&status=${status}&managerId=${managerId}`\r\n    );\r\n  };\r\n\r\n  if (fieldWorkerLoading) {\r\n    return <h1>Loading...</h1>;\r\n  }\r\n\r\n  if (grillDownWorkers.length === 0) {\r\n    return <h1>No Data found!</h1>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container p-5\">\r\n      <div className=\"row\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>State</th>\r\n              <th>Status</th>\r\n              <th>Survey Counts</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {grillDownWorkers.map((data, index) => (\r\n              <tr\r\n                key={index}\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() =>\r\n                  handleClick(\r\n                    data.STATE_CD,\r\n                    data.STATUS\r\n                  )\r\n                }\r\n              >\r\n                <td>{index + 1}</td>\r\n                <td>{data.STATE_CD}</td>\r\n                <td>{data.STATUS}</td>\r\n                <td>{data.SURVEYS}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useQueryParams } from \"./custom-hooks\";\r\nimport { config } from './Constants';\r\n\r\n//const BASE_URL = config.url.API_URL\r\n\r\n\r\nexport const ApproveUsers=()=>{\r\n    const [Approveuser, setApproveuserData] = useState([]);\r\ndebugger\r\n\r\n    const user1=[];\r\n\r\n        const users= [\r\n          {\r\n            \"userId\": 1,\r\n            \"firstName\": \"Krish\",\r\n            \"lastName\": \"Lee\",\r\n            \"phoneNumber\": \"123456\",\r\n            \"emailAddress\": \"krish.lee@learningcontainer.com\"\r\n          },\r\n          {\r\n            \"userId\": 2,\r\n            \"firstName\": \"racks\",\r\n            \"lastName\": \"jacson\",\r\n            \"phoneNumber\": \"123456\",\r\n            \"emailAddress\": \"racks.jacson@learningcontainer.com\"\r\n          },\r\n          {\r\n            \"userId\": 3,\r\n            \"firstName\": \"denial\",\r\n            \"lastName\": \"roast\",\r\n            \"phoneNumber\": \"33333333\",\r\n            \"emailAddress\": \"denial.roast@learningcontainer.com\"\r\n          },\r\n          {\r\n            \"userId\": 4,\r\n            \"firstName\": \"devid\",\r\n            \"lastName\": \"neo\",\r\n            \"phoneNumber\": \"222222222\",\r\n            \"emailAddress\": \"devid.neo@learningcontainer.com\"\r\n          },\r\n          {\r\n            \"userId\": 5,\r\n            \"firstName\": \"jone\",\r\n            \"lastName\": \"mac\",\r\n            \"phoneNumber\": \"111111111\",\r\n            \"emailAddress\": \"jone.mac@learningcontainer.com\"\r\n          }\r\n        ]\r\n\r\n        if (users.length === 0) {\r\n            return <h1>No Data found!</h1>;\r\n          }\r\n\r\n    return(\r\n        <div className=\"container p-5\">\r\n      <div className=\"row\">\r\n          <h1>Showing Records For {users.length} Approved Users</h1>\r\n        <table className=\"table\">\r\n          <thead>\r\n              <tr>\r\n                  <td>UserId</td>\r\n                  <td>FirstName</td>\r\n                  <td>LastName</td>\r\n                  <td>PhoneNumber</td>\r\n                  <td>Email</td>\r\n              </tr>\r\n          </thead>\r\n          <tbody>\r\n              {users.map((data,index)=>(\r\n                <tr\r\n                key={index}\r\n                style={{ cursor: \"pointer\" }} \r\n                >                      \r\n                      <td>{index+1}</td>\r\n                      <td>{data.userId}</td>\r\n                      <td>{data.firstName}</td>\r\n                      <td>{data.lastName}</td>\r\n                      <td>{data.phoneNumber}</td>\r\n                      <td>{data.emailAddress}</td>\r\n                  </tr>\r\n              ))}\r\n          </tbody>\r\n          </table>\r\n          </div>\r\n          </div>\r\n    );\r\n};","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useQueryParams } from \"./custom-hooks\";\r\nimport { config } from './Constants';\r\n\r\nconst BASE_URL = config.url.API_URL\r\n\r\nexport const GetReports = () => {\r\n  const queryParams = useQueryParams();\r\n \r\n  const [reportWorkers, setReportWorkersData] = useState<any[]>([]);\r\n  const [fieldWorkerLoading, setFieldWorkerLoading] = useState(false);\r\n\r\n  const getreportWorkers = async () => {\r\n    try {\r\n      setFieldWorkerLoading(true);\r\n\r\n      const res = await fetch(`${BASE_URL}/getReports.php`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          state: queryParams.get(\"state\"),\r\n          status: queryParams.get(\"status\"),\r\n        }),\r\n      });\r\n\r\n      const json = await res.json();\r\n\r\n      setReportWorkersData(json.response.REPORT);\r\n    } catch (error) {\r\n      console.log({ error });\r\n    } finally {\r\n      setFieldWorkerLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getreportWorkers();\r\n  }, []);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleClick = (\r\n    code: string,\r\n    status: string\r\n  ) => {\r\n    navigate(\r\n      `/get-report-details?code=${code}&status=${status}&state=${queryParams.get(\"state\")}&managerId=${queryParams.get(\"managerId\")}`\r\n    );\r\n  };\r\n\r\n  if (fieldWorkerLoading) {\r\n    return <h1>Loading...</h1>;\r\n  }\r\n\r\n  if (!reportWorkers) {\r\n    return <h1>No Data found!</h1>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container p-5\">\r\n      <div className=\"row\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Assembly Code</th>\r\n              <th>Assembly Name</th>\r\n              <th>Completed</th>\r\n              <th>Status</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {reportWorkers.map((data, index) => (\r\n              <tr\r\n                key={index}\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() =>\r\n                  handleClick(\r\n                    data.ASSEMBLY_CODE,\r\n                    data.STATUS\r\n                  )\r\n                }\r\n              >\r\n                <td>{index + 1}</td>\r\n                <td>{data.ASSEMBLY_CODE}</td>\r\n                <td>{data.ASSEMBLY_NAME}</td>\r\n                <td>{data.COMPLETED}</td>\r\n                <td>{data.STATUS}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useEffect, useState } from \"react\";\r\nimport { useQueryParams } from \"./custom-hooks\";\r\nimport { config } from './Constants';\r\nimport {\r\n  Map,\r\n  Marker,\r\n  IProvidedProps,\r\n  GoogleApiWrapper,\r\n} from \"google-maps-react\";\r\nimport { Button,Table} from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ExportToCSV } from \"./ExportCSV\";\r\n\r\nconst BASE_URL = config.url.API_URL\r\n\r\nexport class excel{\r\n  Sno:string=\"\";\r\n  InterviewerName:string=\"\";\r\n  InterviewerMobile:string=\"\";\r\n  Respodent:string=\"\";\r\n  RespodentMobile:string=\"\";\r\n  DateTime:string=\"\";\r\n  AssemblyCode:string=\"\";\r\n  AssemblyName:string=\"\";\r\n  Latitude:string=\"\";\r\n  Longitude:string=\"\";\r\n  A1:string=\"\";\r\n  A2:string=\"\";\r\n  A3:string=\"\";\r\n  A4:string=\"\";\r\n  A5:string=\"\";\r\n  A6:string=\"\";\r\n  A7:string=\"\";\r\n  A8:string=\"\";\r\n  A9:string=\"\";\r\n  A10:string=\"\";\r\n  \r\n  RecordId:string=\"\";\r\n  AUDIT_STATUS:string=\"\";\r\n  COMMENTS:string =\"\";\r\n  AUDITOR:string=\"\";\r\n}\r\ninterface Props extends IProvidedProps {}\r\n\r\nexport const GetReportDetails = ({ google }: Props) => {\r\n  const navigate = useNavigate();\r\n  const queryParams = useQueryParams();\r\n  const [reportDetailsWorker, setReportDetailsWorkerData] = useState<any[]>([]);\r\n  const [fieldWorkerLoading, setFieldWorkerLoading] = useState(false);\r\n\r\n\r\n  const [excelLogs1, setexcelLogs1] = useState([]);\r\n\r\n  const filename='Report-Details'\r\n\r\n   const excelLogs:any=[];\r\n\r\n  const getreportDetailsWorker = async () => {\r\n    try {\r\n      setFieldWorkerLoading(true);\r\n\r\n      const res = await fetch(`${BASE_URL}/getReportDetails.php`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          code: queryParams.get(\"code\"),\r\n          status: queryParams.get(\"status\"),\r\n          state: queryParams.get(\"state\"),\r\n        }),\r\n      });\r\n\r\n      const json = await res.json();\r\n      debugger\r\n      setReportDetailsWorkerData(json.response.REPORT);\r\n      debugger\r\n      for (let i = 0; i <= json.response.REPORT.length; i++) {\r\n\r\n        const excel1=new excel();\r\n        if(json.response.REPORT[i]!=undefined){\r\n\r\n          excel1.Sno=(i+1).toString();\r\n          excel1.InterviewerName=json.response.REPORT[i].FIRST_NAME;\r\n          excel1.InterviewerMobile=json.response.REPORT[i].MOBILE;\r\n          excel1.Respodent=json.response.REPORT[i].RESPONDENT;\r\n          excel1.RespodentMobile=json.response.REPORT[i].RESPONDENT_MOBILE;\r\n          excel1.DateTime=json.response.REPORT[i].DATETIME;\r\n          excel1.AssemblyCode=json.response.REPORT[i].ASSEMBLY_CODE;\r\n          excel1.AssemblyName=json.response.REPORT[i].ASSEMBLY_NAME;\r\n          excel1.Latitude=json.response.REPORT[i].LATITUDE;\r\n          excel1.Longitude=json.response.REPORT[i].LONGITUDE;\r\n          excel1.A1=json.response.REPORT[i].A1;\r\n          excel1.A2=json.response.REPORT[i].A2;\r\n          excel1.A3=json.response.REPORT[i].A3;\r\n          excel1.A4=json.response.REPORT[i].A4;\r\n          excel1.A5=json.response.REPORT[i].A5;\r\n          excel1.A6=json.response.REPORT[i].A6;\r\n          excel1.A7=json.response.REPORT[i].A7;\r\n          excel1.A8=json.response.REPORT[i].A8;\r\n          excel1.A9=json.response.REPORT[i].A9;\r\n          excel1.A10=json.response.REPORT[i].A10;\r\n          excel1.RecordId=json.response.REPORT[i].RECORD_ID;\r\n          excel1.AUDIT_STATUS =json.response.REPORT[i].AUDIT_STATUS;\r\n          excel1.COMMENTS =json.response.REPORT[i].COMMENTS;\r\n          excel1.AUDITOR =json.response.REPORT[i].AUDITOR;\r\n          excelLogs.push(excel1);\r\n        }\r\n       \r\n      }\r\n\r\n    } catch (error) {\r\n      console.log({ error });\r\n    } finally {\r\n      setFieldWorkerLoading(false);\r\n    }\r\n    setexcelLogs1(excelLogs);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getreportDetailsWorker();\r\n  }, []);\r\n\r\n  const actionOnCLick = (data:any)=>{\r\n    const managerId =  queryParams.get(\"managerId\")?.toString();\r\n    sessionStorage.setItem(\"detailsURL\", window.location.href.split('/#/')[1])\r\n    navigate(`/actions?RId=${data.RECORD_ID}&managerId=${managerId}`);\r\n  }\r\n\r\n  if (fieldWorkerLoading) {\r\n    return <h1>Loading...</h1>;\r\n  }\r\n\r\n  if (reportDetailsWorker.length === 0) {\r\n    return <h1>No Data found!</h1>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n      <div className=\"col-md-3\">\r\n                <ExportToCSV csvData={excelLogs1} fileName={filename} />\r\n      </div>\r\n        <Table bordered hover >\r\n          <thead>\r\n            <tr style={{ position: \"sticky\", top: 0, background:\"#fff\" }}>\r\n                <th>#</th>\r\n                <th>Sno</th>\r\n                \r\n                <th>Audit_Status</th>\r\n                <th>comments</th>\r\n                <th>RECORD_ID</th>\r\n                <th>Auditor</th>\r\n                <th>Interviewer Name</th>\r\n                <th>Interviewer Mobile</th>\r\n\r\n                <th>Respondent</th>\r\n                <th>Respondent Mobile</th>\r\n                <th>Date Time</th>\r\n\r\n                <th>Assembly Code</th>\r\n                <th>Assembly Name</th>\r\n                \r\n                <th>Latitude</th>\r\n                <th>Longitude</th>\r\n                <th>A1</th>\r\n                <th>A2</th>\r\n                <th>A3</th>\r\n                <th>A4</th>\r\n                <th>A5</th>\r\n                <th>A6</th>\r\n                <th>A7</th>\r\n                <th>A8</th>\r\n                <th>A9</th>\r\n                <th>A10</th>\r\n                \r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {reportDetailsWorker.map((data, index) => (\r\n              <tr\r\n                key={index}\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                <td>\r\n                  <Button variant=\"secondary\" onClick={() =>\r\n                    actionOnCLick(data)\r\n\r\n                  }\r\n                  >Action</Button >{' '}\r\n                </td>\r\n                    <td>{index + 1}</td>\r\n                    <td>{data.AUDIT_STATUS}</td>\r\n                    <td>{data.COMMENTS}</td>\r\n                    <td>{data.AUDITOR}</td>\r\n                    <td>{data.RECORD_ID}</td>\r\n                    <td>{data.FIRST_NAME}</td>\r\n                    <td>{data.MOBILE}</td>\r\n                    <td>{data.RESPONDENT}</td>\r\n                    <td>{data.RESPONDENT_MOBILE}</td>\r\n                    <td>{data.DATETIME}</td>\r\n                    <td>{data.ASSEMBLY_CODE}</td>\r\n                    <td>{data.ASSEMBLY_NAME}</td>\r\n                    \r\n                    <td>{data.LATITUDE}</td>\r\n                    <td>{data.LONGITUDE}</td>\r\n\r\n                    <td>{data.A1}</td>\r\n                    <td>{data.A2}</td>\r\n                    <td>{data.A3}</td>\r\n                    <td>{data.A4}</td>\r\n                    <td>{data.A5}</td>\r\n                    <td>{data.A6}</td>\r\n                    <td>{data.A7}</td>\r\n                    <td>{data.A8}</td>\r\n                    <td>{data.A9}</td>\r\n                    <td>{data.A10}</td>\r\n                   \r\n                    \r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n      <div className=\"row\">\r\n            <Map\r\n              google={google}\r\n              initialCenter={{\r\n                lat: reportDetailsWorker[0].LATITUDE,\r\n                lng: reportDetailsWorker[0].LONGITUDE,\r\n              }}\r\n              containerStyle={{ width: \"80vw\", height: \"80vh\" }}\r\n              // @ts-ignore\r\n              mapTypeControl={false}\r\n              streetViewControl={false}\r\n            >\r\n              {reportDetailsWorker.map((marker, index) => {\r\n                let LAT_LONG_TYPE = marker.LAT_LONG_TYPE ;\r\n                let newMarker;\r\n                if (LAT_LONG_TYPE === \"Booth_lat_long\" ) {\r\n                  newMarker = <Marker\r\n                  \r\n                  key={index}\r\n                  // @ts-ignore\r\n                  label={`${marker.BOOT_NO}`}\r\n                  // @ts-ignore\r\n                  title={`${index + 1} ${marker.BOOT_NO} ${marker.RESPONDENT.toLowerCase()} (${\r\n                    marker.MOBILE\r\n                  }) ${marker.DATETIME}`}\r\n                  position={{\r\n                    lat: marker.LATITUDE,\r\n                    lng: marker.LONGITUDE,\r\n                  }}\r\n                  icon={{\r\n\r\n                    url: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png' \r\n            \r\n                  }}\r\n                  />\r\n                } else {\r\n                    //Set here your icon in base the condition\r\n                    newMarker = <Marker\r\n                  \r\n                      key={index}\r\n                      // @ts-ignore\r\n                      // @ts-ignore\r\n                      title={`${index + 1} ${marker.RESPONDENT.toLowerCase()} (${\r\n                        marker.MOBILE\r\n                      }) ${marker.DATETIME}`}\r\n                      position={{\r\n                        lat: marker.LATITUDE,\r\n                        lng: marker.LONGITUDE,\r\n                      }}\r\n                      icon={{\r\n    \r\n                        url: 'http://maps.google.com/mapfiles/ms/icons/red-dot.png' \r\n                \r\n                      }}\r\n                  />\r\n\r\n                }\r\n                return (\r\n                  \r\n                  newMarker\r\n                );\r\n              })}\r\n            </Map>\r\n          </div>\r\n    </div>\r\n  );\r\n};\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyCE1xTn0k-vpSWBSLyfL47GonM-hvX-Y2g\",\r\n})(GetReportDetails);\r\n","import {initialState} from './Store'\r\n\r\nconst Reducer = (state:any, action:any) => {\r\n    switch (action.type) {\r\n\r\n        case 'UPDATE_LOGIN_DATA':\r\n            return {\r\n                ...state,\r\n                user: {...state.user,\r\n                    ...action.payload\r\n                }\r\n            };\r\n        case 'CLEAR_DATA':\r\n            return {\r\n                ...initialState\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default Reducer;\r\n\r\n","import React, {createContext, useReducer} from 'react';\r\nimport Reducer from './Reducer';\r\n\r\nconst initialState = {\r\n    user: {\r\n        status: 'UNAUTHORIZED',\r\n        userId: null,\r\n        email: null,\r\n        userName: null,\r\n        phone: null,\r\n        gender: null,\r\n        dob: null,\r\n        maritalStatus: null,\r\n        countryCode: null,\r\n        managerId:0,\r\n    },\r\n  \r\n    error: null,\r\n};\r\n\r\nconst Store = ({children}:any) => {\r\n    const [state, dispatch] = useReducer(Reducer, initialState);\r\n    return (\r\n        <Context.Provider value={[state, dispatch]}>\r\n            {children}\r\n        </Context.Provider>\r\n    );\r\n};\r\n\r\nconst Context = createContext<any>(initialState);\r\nexport {initialState, Context};\r\nexport default Store;\r\n\r\n// usage\r\n// import {Context} from '../State/Store'\r\n// const [STATE, dispatch] = useContext(Context)\r\n//  dispatch({type: 'TYPE', payload: {status: 'A'}})","import React, { useCallback, useContext, useState } from \"react\";\r\nimport { Form, Row, Col, Button, Container, Stack } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport BASE_URL from \"../Helpers/Constants\";\r\nimport {Context} from '../State/Store';\r\nimport * as XLSX from 'xlsx';\r\nimport * as FileSaver from 'file-saver';\r\nimport {ExportToCSV} from '../ExportCSV';\r\n\r\nconst Login = () => {\r\n    const [STATE, dispatch] = useContext(Context)\r\n    console.log(\"STATE\",STATE)\r\n    const navigate = useNavigate();\r\n    //  dispatch({type: 'TYPE', payload: {data: 'to update'}})\r\n    const onSignup=()=>{\r\ndebugger\r\nnavigate('/signUp');\r\n\r\n    }\r\n\r\n    const ExportToExcel=()=>{\r\n        debugger\r\n      \r\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n        const fileExtension = '.xlsx';\r\n        const fileName ='testfile';\r\n\r\n        const exportToCSV=(csvData:any,fileName:any)=>{\r\n            debugger\r\n            const ws=XLSX.utils.json_to_sheet (csvData);\r\n\r\n            const wb=  { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n\r\n            const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n\r\n            const data= new Blob([excelBuffer], {type:fileType});\r\n\r\n            FileSaver.saveAs(data, fileName + fileExtension);\r\n\r\n          }\r\n    //     const excelFileName='demo';\r\n    //     const EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    //     const EXCEL_EXTENSION = '.xlsx';\r\n    //   const  exportAsExcelFile=(viewers, excelFileName)=> {\r\n    // debugger\r\n    //         const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(viewers);\r\n    //         console.log('worksheet',worksheet);\r\n    //         const workbook: XLSX.WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\r\n    //         const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n    //         saveAsExcelFile(excelBuffer, excelFileName);\r\n    //       }\r\n        \r\n    //       const saveAsExcelFile = (buffer: any, fileName: string)=> {\r\n    //         const data: Blob = new Blob([buffer], {\r\n    //           type: EXCEL_TYPE\r\n    //         });\r\n    //         FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\r\n    //       }\r\n        \r\n    }\r\n\r\n    const onSubmit=()=>{\r\n        debugger;\r\n       \r\n        if(formData.managerId!=''&& formData.userId!=\"\" && formData.password!=\"\"){\r\n            const URL = `${BASE_URL}/surveyAppLogin.php`\r\n            fetch(URL, {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                  },\r\n                body: JSON.stringify(formData),\r\n              })\r\n                .then(response => response.text())\r\n                .then(result => {\r\n                    let resultData = JSON.parse(result);\r\n                    debugger;\r\n                  if(resultData.status===\"SUCCESS\"){\r\n                    let dbResponse=resultData.response.REPORT[0];\r\n                    dispatch({\r\n                        type:'UPDATE_LOGIN_DATA',\r\n                        payload: {'status':'AUTHORIZED','userId':dbResponse.ID,'userName':dbResponse.USERNAME,'managerId':formData.managerId}\r\n                    })\r\n                    debugger;\r\n                    let sessionData =STATE.user\r\n                    sessionData.status = 'AUTHORIZED';\r\n                    sessionData.userId =dbResponse.ID;\r\n                    sessionData.userName =dbResponse.USERNAME;\r\n                    sessionData.managerId = formData.managerId;\r\n                    sessionStorage.setItem('userDetails' ,JSON.stringify(sessionData) )\r\n                    navigate('/Dashboard',{ state: sessionData.managerId });\r\n                }else{alert(\"login failed please contact admin\")}\r\n                    // setData(resultData.response.REPORT)\r\n                })\r\n                .catch(error => console.log('error', error));\r\n    }else{alert('Manager Id Required')}\r\n    }\r\n\r\n    const [formData, setFormData] = useState({\r\n        \r\n        \"userId\":\"\",\r\n        \"password\":\"\",\r\n        \"managerId\":\"\"\r\n\r\n    })\r\n    const onChangeText = useCallback((key,value) => {\r\n        console.log(\"value\",value)\r\n        setFormData((prev)=>{\r\n            return{\r\n                ...prev,\r\n                [key]: value,\r\n            }\r\n        })\r\n    }, [formData])\r\n\r\n    // const viewers=[\r\n    //     {id:1,name:'name1'},\r\n    //     {id:2,name:'name2'},\r\n    //     {id:3,name:'name3'},\r\n    //     {id:4,name:'name4'}\r\n    // ]\r\n    // const filename='testfile'\r\n\r\n    return (\r\n        <Container fluid=\"xl\">\r\n            <h1>Login</h1>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Form.Group className=\"mb-3\">\r\n                <Form.Label>Username *</Form.Label>\r\n                <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Username\"\r\n                    defaultValue=\"\"\r\n                    value={formData.userId} onChange={(value)=>onChangeText('userId',value.target.value)} \r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                <Form.Label>Password *</Form.Label>\r\n                <Form.Control\r\n                    required\r\n                    type=\"password\"\r\n                    placeholder=\"Enter Password\"\r\n                    defaultValue=\"\"\r\n                    value={formData.password} onChange={(value)=>onChangeText('password',value.target.value)} \r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                <Form.Label>Manager Id *</Form.Label>\r\n                <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Manager Id\"\r\n                    defaultValue=\"\"\r\n                    value={formData.managerId} onChange={(value)=>onChangeText('managerId',value.target.value)} \r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                </Form.Group>\r\n            </Row>\r\n            <Stack direction=\"horizontal\" gap={3}>\r\n                <Button variant=\"primary\" onClick={()=>onSubmit()}>Login</Button>\r\n                { <div className=\"vr\" /> }\r\n                { <Button variant=\"secondary\" onClick={()=>onSignup()}>Sign up</Button> }\r\n                {/* { <Button variant=\"secondary\" onClick={()=>ExportToExcel()}>Export</Button> }  */}\r\n                {/* <div>\r\n                <ExportToCSV csvData={viewers} fileName={filename} />\r\n                </div> */}\r\n            </Stack>\r\n            \r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, { useEffect, useState } from 'react'\r\nimport { Table,Card ,Button} from 'react-bootstrap';\r\nimport { useNavigate,useLocation } from 'react-router-dom';\r\nimport BASE_URL from \"../Helpers/Constants\";\r\nconst Dashboard=(props:any)=>{\r\n    debugger;\r\n    const { state } = useLocation();\r\n    debugger;\r\n    const navigate =useNavigate();\r\n   const navigateToReports =()=>{\r\n    navigate('/reports?managerId='+state);\r\n   }\r\n   const navigateToDrillDownReports =()=>{\r\n    navigate('/get-assembly-grill-down-data?managerId='+state);\r\n   }\r\n   const navigateToApproveUsers =()=>{\r\n    navigate('/get-Approve-Users?managerId='+state);\r\n   }\r\n   const navigateToFieldWorkers =()=>{\r\n    navigate('/field-works?managerId='+state);\r\n   }\r\n    return (\r\n        <div>\r\n            <Card style={{ width: '18rem',float:'left',marginTop: '25px',marginLeft:'20px' }}>\r\n                {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                <Card.Body>\r\n                    <Card.Title>Reports</Card.Title>\r\n                    <Card.Text>\r\n                        Click below button to navigate to Reports.\r\n                    </Card.Text>\r\n                    <Button variant=\"primary\" onClick={()=>{\r\n                        navigateToReports()\r\n                    }}  >Go to Reports</Button>\r\n                </Card.Body>\r\n            </Card>\r\n            <Card style={{ width: '18rem',float:'left',marginTop: '25px',marginLeft:'20px' }}>\r\n                {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                <Card.Body>\r\n                    <Card.Title>Field Workers</Card.Title>\r\n                    <Card.Text>\r\n                    Click below button to navigate to Field Workers.\r\n                    </Card.Text>\r\n                    <Button variant=\"primary\" onClick={()=>{\r\n                        navigateToFieldWorkers()\r\n                    }}  >Go to Field Workers</Button>\r\n                </Card.Body>\r\n            </Card>\r\n            <Card style={{width: '18rem',float:'left',marginTop: '25px',marginLeft:'20px'}}>\r\n                {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                <Card.Body>\r\n                    <Card.Title>Drill-down Reports</Card.Title>\r\n                    <Card.Text>\r\n                        Click below button to navigate to Drill-down  Reports.\r\n                    </Card.Text>\r\n                    <Button variant=\"primary\" onClick={()=>{\r\n                        navigateToDrillDownReports()\r\n                    }}  >Go to Drill-down Reports</Button>\r\n                </Card.Body>\r\n            </Card>\r\n            <Card style={{width: '18rem',float:'left',marginTop: '25px',marginLeft:'20px'}}>\r\n                {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                <Card.Body>\r\n                    <Card.Title>Approve-users</Card.Title>\r\n                    <Card.Text>\r\n                        Click below button to navigate to Drill-down  Reports.\r\n                    </Card.Text>\r\n                    <Button variant=\"primary\" onClick={()=>{\r\n                        navigateToApproveUsers()\r\n                    }}  >Go to Drill-down Reports</Button>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { useCallback, useContext, useState } from \"react\";\r\nimport { Form, Row, Col, Button, Container, Stack } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport BASE_URL from \"../Helpers/Constants\";\r\nimport {Context} from '../State/Store'\r\n\r\n\r\nconst SignUp = () => {\r\n    const [STATE, dispatch] = useContext(Context)\r\n    console.log(\"STATE\",STATE)\r\n    const navigate = useNavigate();\r\n    //  dispatch({type: 'TYPE', payload: {data: 'to update'}})\r\n    const onSignup= ()=>{\r\n     debugger\r\n        if(formData.username!=''&& formData.fname!=\"\" && formData.password!=\"\"&&formData.email!=\"\"){\r\n            console.log(formData)\r\n            navigate('/');\r\n\r\n            try {\r\n       \r\n                 fetch(`${BASE_URL}/SurveyAppSignUp.php`, {\r\n                  method: \"POST\",\r\n                  headers: {\r\n                    \"content-type\": \"application/json\",\r\n                  },\r\n                  body: JSON.stringify(\r\n                      formData\r\n                  ),\r\n                }).then(response=>response.text())\r\n                .then(result=>{\r\n                    let resultData=JSON.parse(result);\r\n                    if(resultData.status==\"success\"){\r\n                        navigate('/');\r\n                    }\r\n                })\r\n                   \r\n              } catch (error) {\r\n                console.log({ error });\r\n              } finally {\r\n                \r\n              }\r\n        }\r\n       \r\n    }\r\n\r\n    const [formData, setFormData] = useState({\r\n        \r\n        \"username\":\"\",\r\n        \"password\":\"\",\r\n        // \"status\":\"\",\r\n        \"fname\":\"\",\r\n        \"lname\":\"\",\r\n        \"mname\":\"\",\r\n        \"email\":\"\"\r\n\r\n    })\r\n    const onChangeText = useCallback((key,value) => {\r\n        console.log(\"value\",value)\r\n        setFormData((prev)=>{\r\n            return{\r\n                ...prev,\r\n                [key]: value,\r\n            }\r\n        })\r\n    }, [formData])\r\n\r\n    return (\r\n        <Container fluid=\"xl\">\r\n            <h1>SignUp</h1>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Form.Group className=\"mb-3\">\r\n                <Form.Label>Username *</Form.Label>\r\n                <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Username\"\r\n                    defaultValue=\"\"\r\n                    value={formData.username} onChange={(value)=>onChangeText('username',value.target.value)} \r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                <Form.Label>Password *</Form.Label>\r\n                <Form.Control\r\n                    required\r\n                    type=\"password\"\r\n                    placeholder=\"Enter Password\"\r\n                    defaultValue=\"\"\r\n                    value={formData.password} onChange={(value)=>onChangeText('password',value.target.value)} \r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                {/* <Form.Group className=\"mb-3\">\r\n                <Form.Label>Status *</Form.Label>\r\n                <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Status\"\r\n                    defaultValue=\"\"\r\n                    value={formData.status} onChange={(value)=>onChangeText('status',value.target.value)} \r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                </Form.Group> */}\r\n                <Form.Group className=\"mb-3\">\r\n                <Form.Label>FirstName *</Form.Label>\r\n                <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    placeholder=\"Enter FirstName\"\r\n                    defaultValue=\"\"\r\n                    value={formData.fname} onChange={(value)=>onChangeText('fname',value.target.value)} \r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                <Form.Label>LastName *</Form.Label>\r\n                <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    placeholder=\"Enter LastName\"\r\n                    defaultValue=\"\"\r\n                    value={formData.lname} onChange={(value)=>onChangeText('lname',value.target.value)} \r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                <Form.Label>MiddleName *</Form.Label>\r\n                <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    placeholder=\"Enter MiddleName\"\r\n                    defaultValue=\"\"\r\n                    value={formData.mname} onChange={(value)=>onChangeText('mname',value.target.value)} \r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                <Form.Label>Email *</Form.Label>\r\n                <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Email\"\r\n                    defaultValue=\"\"\r\n                    value={formData.email} onChange={(value)=>onChangeText('email',value.target.value)} \r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                </Form.Group>\r\n            </Row>\r\n            <Stack direction=\"horizontal\" gap={3}>\r\n                {/* <Button variant=\"primary\" onClick={()=>onSubmit()}>Login</Button> */}\r\n                { <div className=\"vr\" /> }\r\n                { <Button variant=\"primary\" onClick={()=>onSignup()}>Sign up</Button> }\r\n            </Stack>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default SignUp;","import React, { useContext } from 'react'\r\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\r\nimport Cluster from \"../Maps/cluster\";\r\nimport { FieldWorkers } from \"../fieldWorkers\";\r\nimport ActionDetails from \"../Screens/ActionDetails\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Reports from \"../Screens/Reports\";\r\nimport ReportResults from \"../Screens/ReportResults\";\r\nimport { GrillDownData } from \"../grillDownData\";\r\nimport { ApproveUsers } from \"../ApproveUsers\";\r\nimport { GetReports } from '../getReports';\r\nimport GetReportDetails from '../getReportDetails';\r\nimport Login from \"../Screens/Login\";\r\nimport Dashboard from '../Screens/Dashboard';\r\nimport { Context } from '../State/Store'\r\nimport { Table,Container, Navbar, Button } from \"react-bootstrap\";\r\nimport SignUp from '../Screens/Signup';\r\nexport default function Navigation() {\r\n    const [STATE,dispatch] = useContext(Context);\r\n     const navigate = useNavigate()\r\n    debugger;\r\n    let data = sessionStorage.getItem('userDetails') !=null ?  JSON.parse(sessionStorage.getItem('userDetails') || '{}') : {}\r\n    \r\n     console.log('sessionStorage',data)\r\n    // if(window.location.hash !== ''){\r\n    //     window.location.href = window.location.origin;\r\n    // }\r\n    const onSignOut = () => {\r\n        sessionStorage.clear();\r\n        dispatch({\r\n            type: 'UPDATE_LOGIN_DATA',\r\n            payload: { 'status': 'UNAUTHORIZED' }\r\n        })\r\n        navigate('/')\r\n    }\r\n    if(data?.status === 'AUTHORIZED'){\r\n        // dispatch({\r\n        //     type: 'UPDATE_LOGIN_DATA',\r\n        //     payload: { 'status': 'AUTHORIZED','userId':data.ID,'userName':data.USERNAME }\r\n        // })\r\n        return (\r\n        \r\n            <div>\r\n                 <div>\r\n                    <Navbar bg=\"primary\" variant=\"dark\" fixed=\"top\" >\r\n                        <Container>\r\n                            <Navbar.Brand >Welcome : {data.userName}</Navbar.Brand>\r\n                            <Navbar.Toggle />\r\n                            <Navbar.Collapse className=\"justify-content-end\">\r\n                              \r\n                                < Button  variant=\"danger\" onClick={()=>{\r\n                                    onSignOut()\r\n                                }}> Sign Out</Button>\r\n                            </Navbar.Collapse>\r\n                        </Container>\r\n                    </Navbar>\r\n                 </div>\r\n                 <div style={{marginTop:'10vh'}}>\r\n                 <Routes>\r\n                     <Route path=\"/Dashboard\" element={<Dashboard/>} />\r\n                     <Route path=\"/field-works\" element={<FieldWorkers />} />\r\n                     <Route path=\"/actions\"  element={<ActionDetails />} />\r\n                     <Route path=\"/details\" element={<Cluster />} />\r\n                     <Route path=\"/get-assembly-grill-down-data\" element={<GrillDownData />} />\r\n                     <Route path=\"/get-report-details\" element={<GetReportDetails />} />\r\n                     <Route path=\"/get-reports\" element={<GetReports />} />\r\n                     <Route path=\"/get-Approve-Users\" element={<ApproveUsers />} />\r\n                     <Route path=\"/login\" element={<Login />} />\r\n                     <Route path=\"/report-results\" element={<ReportResults />} />\r\n                     <Route path=\"/reports\" element={<Reports />} />\r\n                 </Routes>\r\n                 </div>\r\n            </div>\r\n             )\r\n    }\r\n    else{\r\n        return (\r\n        <div>\r\n\r\n            <Routes><Route path=\"/\" element={<Login />} /></Routes>\r\n            <Routes><Route path=\"/signUp\" element={<SignUp />} /></Routes>\r\n        </div>)\r\n    }\r\n    \r\n}\r\n","import React from \"react\";\nimport { HashRouter } from \"react-router-dom\";\nimport Navigation from \"./Navigator/Navigation\";\nimport Store from \"./State/Store\";\n\n\n\n\nfunction App() {\n  return (\n    <HashRouter>\n        <Store>\n          <Navigation />\n        </Store>\n      </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}