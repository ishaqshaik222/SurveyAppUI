{"version":3,"sources":["custom-hooks.ts","Maps/cluster.tsx","fieldWorkers.tsx","Screens/ActionDetails.tsx","Helpers/Constants.tsx","Screens/Reports.tsx","Screens/ReportResults.tsx","Constants.js","grillDownData.tsx","getReports.tsx","getReportDetails.tsx","State/Reducer.tsx","State/Store.tsx","Screens/Login.tsx","Screens/Dashboard.tsx","Navigator/Navigation.tsx","App.tsx","index.tsx"],"names":["useQueryParams","window","location","search","hash","React","useMemo","URLSearchParams","split","GoogleApiWrapper","apiKey","google","queryParams","navigate","useNavigate","useState","get","moment","format","toDate","setToDate","fromDate","setFromDate","surveyData","setSurveyData","surveyDataLoading","setSurveyDataLoading","called","setCalled","getSurveyData","a","fetch","method","headers","body","JSON","stringify","uid","to","from","state","assembly","res","console","log","json","status","response","REPORT","error","toString","useEffect","className","length","htmlFor","name","type","value","placeholder","onChange","e","target","Table","striped","hover","size","map","data","index","Button","variant","onClick","managerId","RECORD_ID","actionOnCLick","RESPONDENT","MOBILE","DATETIME","LAT","LONGITUDE","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","A11","A12","A13","A14","A15","A16","A17","A18","A19","A20","A21","A22","AUDIT_STATUS","COMMENTS","initialCenter","lat","lng","containerStyle","width","height","mapTypeControl","streetViewControl","marker","label","title","toLowerCase","position","FieldWorkers","fieldWorkers","setFieldWorkersData","fieldWorkerLoading","setFieldWorkerLoading","getFieldWorkers","manager_id","style","cursor","id","date","navigationData","handleClick","ID","FIRST_NAME","DATE","STATE","ASSEMBLY","SURVEYS","ActionDetails","useParams","RID","sessionDetails","sessionStorage","getItem","parse","userId","formData","setFormData","onChangeText","useCallback","key","prev","Form","onSubmit","alert","Group","controlId","Label","Control","readOnly","Select","dp","comments","auditType","BASE_URL","Reports","setData","fetchReportsData","then","text","result","resultData","catch","display","alignItems","justifyContent","flexDirection","bordered","item","query","ReportResults","props","useLocation","setHeaders","rowData","setRowData","fetchReportResultData","URL","Object","keys","rowItem","headerItem","config","url","API_URL","GrillDownData","grillDownWorkers","setGrillDownWorkersData","getgrillDownWorkers","STATE_CD","STATUS","GetReports","reportWorkers","setReportWorkersData","getreportWorkers","code","ASSEMBLY_CODE","ASSEMBLY_NAME","COMPLETED","reportDetailsWorker","setReportDetailsWorkerData","getreportDetailsWorker","top","background","RESPONDENT_MOBILE","LATITUDE","LAT_LONG_TYPE","BOOT_NO","icon","Reducer","action","user","payload","initialState","email","userName","phone","gender","dob","maritalStatus","countryCode","Context","createContext","Store","children","useReducer","dispatch","Provider","Login","useContext","Container","fluid","Row","required","defaultValue","Feedback","password","Stack","direction","gap","dbResponse","USERNAME","sessionData","setItem","Dashboard","Card","float","marginTop","marginLeft","Body","Title","Text","Navigation","Navbar","bg","fixed","Brand","Toggle","Collapse","clear","path","element","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9c0a30e.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const useQueryParams = () => {\n  const { search, hash } = window.location;\n\n  return React.useMemo(\n    () => new URLSearchParams(hash ? `?${hash.split(\"?\")[1]}` : search),\n    [search, hash]\n  );\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useState } from \"react\";\nimport {\n  Map,\n  Marker,\n  IProvidedProps,\n  GoogleApiWrapper,\n} from \"google-maps-react\";\nimport moment from \"moment\";\nimport { useQueryParams } from \"../custom-hooks\";\nimport { Button,Table} from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nconst BASE_URL = \"http://3.109.197.149/projects/survey_app/api\";\n\ninterface Props extends IProvidedProps {}\n\nconst Cluster = ({ google }: Props) => {\n  const queryParams = useQueryParams();\n  const navigate = useNavigate();\n  const [toDate, setToDate] = useState(\n    queryParams.get(\"date\") || moment().format(\"YYYY-MM-DD\")\n  );\n  const [fromDate, setFromDate] = useState(\n    queryParams.get(\"date\") || moment().format(\"YYYY-MM-DD\")\n  );\n  const [surveyData, setSurveyData] = useState<any[]>([]);\n\n  const [surveyDataLoading, setSurveyDataLoading] = useState(false);\n\n  const [called, setCalled] = useState(false);\n\n  const getSurveyData = async () => {\n    try {\n      setCalled(false);\n      setSurveyDataLoading(true);\n\n      const res = await fetch(`${BASE_URL}/getSurveyData.php`, {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          uid: queryParams.get(\"id\"),\n          to: toDate,\n          from: fromDate,\n          state: queryParams.get(\"state\"),\n          assembly: queryParams.get(\"assembly\"),\n        }),\n      });\n      console.log(res)\n      const json = await res.json();\n\n      if (json.status === \"ERROR\") {\n        setSurveyData([]);\n        return;\n      }\n      setSurveyData(json.response.REPORT);\n    } catch (error) {\n      console.log({ error });\n    } finally {\n      setCalled(true);\n      setSurveyDataLoading(false);\n    }\n  };\n  const id =  queryParams.get(\"id\")?.toString();\n\n  const actionOnCLick = (data:any)=>{\n    const managerId =  queryParams.get(\"managerId\")?.toString();\n    navigate(`/actions?RId=${data.RECORD_ID}&managerId=${managerId}`);\n  }\n  useEffect(() => {\n    getSurveyData();\n  }, [fromDate, toDate]);\n\n  return (\n    <div className=\"container p-5\">\n      <div className=\"col-md-8 my-5\">\n        <div className=\"row p-2\">\n          <h1>\n            Showing {surveyData.length} records for {queryParams.get(\"name\")}\n          </h1>\n        </div>\n        <div className=\"row p-2\">\n          <div className=\"col-md-3\">\n            <label htmlFor=\"from\">From Date</label>\n          </div>\n\n          <input\n            name=\"from\"\n            type=\"date\"\n            value={fromDate}\n            className=\"col-md-3\"\n            placeholder=\"Calendar\"\n            onChange={(e) => setFromDate(e.target.value)}\n          />\n\n          <label className=\"col-md-3\" htmlFor=\"to\">\n            To Date\n          </label>\n          <input\n            name=\"to\"\n            type=\"date\"\n            value={toDate}\n            className=\"col-md-3\"\n            placeholder=\"Calendar\"\n            onChange={(e) => setToDate(e.target.value)}\n          />\n        </div>\n      </div>\n\n      {surveyDataLoading && <h1>Loading...</h1>}\n\n      {called && surveyData.length === 0 && <h1>No Data found!</h1>}\n\n      {surveyData.length > 0 && (\n        <>\n          <div className=\"row\">\n            <Table striped hover size=\"sm\">\n              <thead>\n                <tr>\n                  <th>Actions</th>\n                  <th>#</th>\n                  <th>Respondent</th>\n                  <th>Mobile</th>\n                  <th>Date Time</th>\n                  <th>Latitude</th>\n                  <th>Longitude</th>\n                  <th>A1</th>\n                  <th>A2</th>\n                  <th>A3</th>\n                  <th>A4</th>\n                  <th>A5</th>\n                  <th>A6</th>\n                  <th>A7</th>\n                  <th>A8</th>\n                  <th>A9</th>\n                  <th>A10</th>\n                  <th>A12</th>\n                  <th>A13</th>\n                  <th>A14</th>\n                  <th>A15</th>\n                  <th>A16</th>\n                  <th>A17</th>\n                  <th>A18</th>\n                  <th>A19</th>\n                  <th>A20</th>\n                  <th>A21</th>\n                  <th>A22</th>\n                  <th>RECORD_ID</th>\n                  <th>Audit Status</th>\n                  <th>Comments</th>\n\n                </tr>\n              </thead>\n              <tbody>\n                {surveyData.map((data, index) => (\n                  <tr key={index}>\n                    <td>\n                    <Button variant=\"secondary\"  onClick={() =>\n                 actionOnCLick(data)\n                \n                }\n                >Action</Button >{' '}\n                    </td>\n                    <td>{index + 1}</td>\n                    <td>{data.RESPONDENT}</td>\n                    <td>{data.MOBILE}</td>\n                    <td>{data.DATETIME}</td>\n                    <td>{data.LAT}</td>\n                    <td>{data.LONGITUDE}</td>\n\n                    <td>{data.A1}</td>\n                    <td>{data.A2}</td>\n                    <td>{data.A3}</td>\n                    <td>{data.A4}</td>\n                    <td>{data.A5}</td>\n                    <td>{data.A6}</td>\n                    <td>{data.A7}</td>\n                    <td>{data.A8}</td>\n                    <td>{data.A9}</td>\n                    <td>{data.A10}</td>\n                    <td>{data.A11}</td>\n                    <td>{data.A12}</td>\n                    <td>{data.A13}</td>\n                    <td>{data.A14}</td>\n                    <td>{data.A15}</td>\n                    <td>{data.A16}</td>\n                    <td>{data.A17}</td>\n                    <td>{data.A18}</td>\n                    <td>{data.A19}</td>\n                    <td>{data.A20}</td>\n                    <td>{data.A21}</td>\n                    <td>{data.A22}</td>\n                    <td>{data.RECORD_ID}</td>\n                    <td>{data.AUDIT_STATUS}</td>\n                    <td>{data.COMMENTS}</td>\n                  </tr>\n                ))}\n              </tbody>\n</Table>\n          </div>\n\n          <div className=\"row\">\n            <Map\n              google={google}\n              initialCenter={{\n                lat: surveyData[0].LAT,\n                lng: surveyData[0].LONGITUDE,\n              }}\n              containerStyle={{ width: \"80vw\", height: \"80vh\" }}\n              // @ts-ignore\n              mapTypeControl={false}\n              streetViewControl={false}\n            >\n              {surveyData.map((marker, index) => {\n                return (\n                  <Marker\n                    key={index}\n                    // @ts-ignore\n                    label={`${index + 1}`}\n                    // @ts-ignore\n                    title={`${index + 1} ${marker.RESPONDENT.toLowerCase()} (${\n                      marker.MOBILE\n                    }) ${marker.DATETIME}`}\n                    position={{\n                      lat: marker.LAT,\n                      lng: marker.LONGITUDE,\n                    }}\n                  />\n                );\n              })}\n            </Map>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCE1xTn0k-vpSWBSLyfL47GonM-hvX-Y2g\",\n})(Cluster);\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useQueryParams } from \"./custom-hooks\";\n\nconst BASE_URL = \"http://3.109.197.149/projects/survey_app/api\";\n\nexport const FieldWorkers = () => {\n  const queryParams = useQueryParams();\n\n  const [fieldWorkers, setFieldWorkersData] = useState<any[]>([]);\n  const [fieldWorkerLoading, setFieldWorkerLoading] = useState(false);\n\n  const getFieldWorkers = async () => {\n    try {\n      setFieldWorkerLoading(true);\n      const res = await fetch(`${BASE_URL}/getFieldWorkers.php`, {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          manager_id: queryParams.get(\"managerId\"),\n        }),\n      });\n\n      const json = await res.json();\n      if(json.response !=='SURVEY_LIST_EMPTY'){\n      setFieldWorkersData(json.response.REPORT);\n    }else{ }\n    } catch (error) {\n      console.log({ error });\n    } finally {\n      setFieldWorkerLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getFieldWorkers();\n  }, []);\n\n  const navigate = useNavigate();\n\n  const handleClick = (\n    id: string,\n    name: string,\n    date: string,\n    state: string,\n    assembly: string\n  ) => {\n    let navigationData =`/details?id=${id}&name=${name}&date=${date}&state=${state}&assembly=${assembly}&managerId=${queryParams.get(\"managerId\")}`\n    navigate(`/details?id=${id}&name=${name}&date=${date}&state=${state}&assembly=${assembly}&managerId=${queryParams.get(\"managerId\")}`,{ state:navigationData  });\n  };\n\n  if (fieldWorkerLoading) {\n    return <h1>Loading...</h1>;\n  }\n\n  if (fieldWorkers?.length === 0) {\n    return <h1 >No Data found!</h1>;\n  }\n\n  return (\n    <div className=\"container p-5\">\n      <div className=\"row\">\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Date</th>\n              <th>Field Worker</th>\n              <th>Surveys</th>\n              <th>Mobile</th>\n              <th>State</th>\n              <th>Assembly</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {fieldWorkers.map((data, index) => (\n              <tr\n                key={index}\n                style={{ cursor: \"pointer\" }}\n                onClick={() =>\n                  handleClick(\n                    data.ID,\n                    data.FIRST_NAME,\n                    data.DATE,\n                    data.STATE,\n                    data.ASSEMBLY\n                  )\n                }\n              >\n                <td>{index + 1}</td>\n                <td>{data.DATE}</td>\n                <td>{data.FIRST_NAME}</td>\n                <td>{data.SURVEYS}</td>\n                <td>{data.MOBILE}</td>\n                <td>{data.STATE}</td>\n                <td>{data.ASSEMBLY}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","import { useEffect, useState,useCallback } from \"react\";\r\nimport {\r\n  Map,\r\n  Marker,\r\n  IProvidedProps,\r\n  GoogleApiWrapper,\r\n} from \"google-maps-react\";\r\nimport moment from \"moment\";\r\nimport { useQueryParams } from \"../custom-hooks\";\r\nimport { Button,Table,Form} from \"react-bootstrap\";\r\nimport { useNavigate, useParams  } from \"react-router-dom\";\r\n\r\nconst ActionDetails = () => {\r\n    debugger;\r\n    const params = useParams();\r\n    \r\n    // let history = useNavigate ();\r\n    // const goToPreviousPath = () => {\r\n        \r\n    // }\r\nconst BASE_URL = \"http://3.109.197.149/projects/survey_app/api\";\r\n    const queryParams = useQueryParams();\r\n    const RID =  queryParams.get(\"RId\")?.toString();\r\n\r\n    let sessionDetails = sessionStorage.getItem('userDetails') !=null ?  JSON.parse(sessionStorage.getItem('userDetails') || '{}') : {}\r\n\r\n    const [formData, setFormData] = useState({\r\n        \r\n        'recordId':RID,\r\n        'comments':\"\",\r\n        'auditType':\"\",\r\n        'status':\"Valid\",\r\n        'createdBy': sessionDetails.userId,\r\n\r\n    })\r\n    const onSubmit = () => {\r\n      console.log(formData)\r\n      getFieldWorkers();\r\n      alert('Data Submitted Successfully');\r\n    }\r\n    const onChangeText = useCallback((key,value) => {\r\n        console.log(\"value\",value)\r\n        setFormData((prev)=>{\r\n            return{\r\n                ...prev,\r\n                [key]: value,\r\n            }\r\n        })\r\n    }, [formData])\r\n\r\n    const getFieldWorkers = async () => {\r\n        try {\r\n       \r\n          const res = await fetch(`${BASE_URL}/saveActionComments.php`, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"content-type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(\r\n                formData\r\n            ),\r\n          });\r\n    \r\n        \r\n        \r\n        } catch (error) {\r\n          console.log({ error });\r\n        } finally {\r\n          \r\n        }\r\n      };\r\n\r\n    //   useEffect(() => {\r\n    //     getFieldWorkers();\r\n    //   }, []);\r\n    return (\r\n        <div className=\"container p-5\">\r\n        <div className=\"row\">\r\n        <div>\r\n            <Form onSubmit={onSubmit}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Record Id</Form.Label>\r\n                    <Form.Control  value={RID} type=\"text\" placeholder=\"Record Id\" readOnly  />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicStatus\">\r\n                    <Form.Label>Status</Form.Label>\r\n                            <Form.Select aria-label=\"Default select example\" onChange={(dp)=>onChangeText('status',dp.target.value)}>\r\n                               \r\n                                <option value=\"Valid\">Valid</option>\r\n                                <option value=\"In Valid\">In Valid</option>\r\n                                <option value=\"Need Review\">Need Review</option>\r\n                            </Form.Select>\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicComments\" >\r\n                    <Form.Label>Comments</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Comments\"  value={formData.comments} onChange={(value)=>onChangeText('comments',value.target.value)} />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicComments\">\r\n                    <Form.Label>Auditor Type</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Auditor Type\" value={formData.auditType} onChange={(value)=>onChangeText('auditType',value.target.value)}  />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActionDetails","const BASE_URL = \"http://3.109.197.149/projects/survey_app/api\"; \r\n//const BASE_URL = \"http://127.0.0.1:300/survey_app/api\"; \r\n\r\nexport default BASE_URL;","import React, { useEffect, useState } from 'react'\r\nimport { Table } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport BASE_URL from \"../Helpers/Constants\";\r\n\r\nconst Reports=()=>{\r\n    const navigate = useNavigate();\r\n    const [data, setData] = useState([])\r\n    const fetchReportsData = async () => {\r\n        const URL = `${BASE_URL}/getReportsIndividual.php`\r\n        fetch(`${BASE_URL}/getReportsIndividual.php`,  {\r\n            method: 'GET',\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n              },\r\n          })\r\n            .then(response => response.text())\r\n            .then(result => {\r\n                let resultData = JSON.parse(result);\r\n                // console.log('result',resultData)\r\n                setData(resultData.response.REPORT)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n        };\r\n    \r\n    const submitQuery=(query: any)=>{\r\n        navigate('/report-results', { state: query });\r\n    }\r\n    useEffect(() => {\r\n        fetchReportsData()\r\n    }, [])\r\n    return (\r\n        <div style={{display:'flex',\r\n                     alignItems: 'center',\r\n                     justifyContent: 'center',\r\n                     flexDirection: 'column'\r\n                     }}>\r\n            <h1>Reports</h1>             \r\n            <div style={{width:'90vw'}}>\r\n                <Table bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                    <th>#</th>\r\n                    <th>MODULE</th>\r\n                    <th>REPORT_NAME</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                // JSON.stringify(data)\r\n                data.map((item,index)=>{\r\n                    return (\r\n                        <tr key={index.toString()}>\r\n                        <td >{index+1}</td>\r\n                        <td>{item['MODULE']} </td>\r\n                        <td>{item['REPORT_NAME']} </td>\r\n                        <td><button onClick={()=>{submitQuery(item['QUERY'])}}>Pull Report</button></td>\r\n                        </tr>\r\n                    )\r\n                    })\r\n                }\r\n                </tbody>\r\n                </Table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reports\r\n","import { useEffect, useState } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport BASE_URL from \"../Helpers/Constants\";\r\n\r\nconst ReportResults=(props:any)=> {\r\n    const { state } = useLocation();\r\n    const [headers, setHeaders] = useState<Array<string>>([]);\r\n    const [rowData, setRowData] = useState<Array<string>>([]);\r\n\r\n    const fetchReportResultData = async () => {\r\n        const URL = `${BASE_URL}/getReportsResults.php`\r\n        fetch(URL, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n              },\r\n            body: JSON.stringify({\r\n                query: state,\r\n            }),\r\n          })\r\n            .then(response => response.text())\r\n            .then(result => {\r\n                let resultData = JSON.parse(result);\r\n                const headers = Object.keys(resultData.response[0]);\r\n                console.log('row data', resultData.response)\r\n                console.log('headers', headers)\r\n                setRowData(resultData.response)\r\n                setHeaders(headers)\r\n                // setData(resultData.response.REPORT)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n        };\r\n    useEffect(() => {\r\n        fetchReportResultData()\r\n    }, [])\r\n    return (\r\n        // <div style={{display:'flex',\r\n        //              alignItems: 'center',\r\n        //              justifyContent: 'center',\r\n        //              flexDirection: 'column'\r\n        //              }}>\r\n        //     <h1>Reports</h1>             \r\n        //     <div style={{width:'90vw'}}>\r\n                // <Table bordered hover>\r\n                // <thead>\r\n                //     <tr>\r\n                //     <th>#</th>\r\n                //     <th>ACCESS_LEVEL</th>\r\n                //     <th>MODULE</th>\r\n                //     <th>REPORT_ID</th>\r\n                //     <th>REPORT_NAME</th>\r\n                //     <th>QUERY</th>\r\n                //     </tr>\r\n                // </thead>\r\n                // <tbody>\r\n                //     <tr>\r\n                //     <td>{index+1}</td>\r\n                //     <td>{item['ACCESS_LEVEL']} </td>\r\n                //     <td>{item['MODULE']} </td>\r\n                //     <td>{item['REPORT_ID']} </td>\r\n                //     <td>{item['REPORT_NAME']} </td>\r\n                //     <td>{item['QUERY']} </td>\r\n                //     <td><button onClick={()=>{submitQuery(item['QUERY'])}}>Execute</button></td>\r\n                //     </tr>\r\n                // </tbody>\r\n                // </Table>\r\n        //     </div>\r\n        // </div>\r\n\r\n\r\n        <div style={{display:'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column'\r\n        }} >\r\n            <div style={{width:'90vw'}}>\r\n            <h1>Reports Results</h1>\r\n            <Table bordered hover>\r\n                <thead>\r\n               \r\n                    {\r\n                \r\n                headers.length > 0 ? \r\n                <tr>\r\n                    {\r\n                    headers.map((item, index)=>{\r\n                        return (<th>{item}</th>)\r\n                    })}\r\n                </tr>\r\n                :\r\n                <></>\r\n                    }\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        rowData.length >0 ? \r\n                            rowData.map((rowItem,index)=>{\r\n                                return (\r\n                                    <tr key={index.toString()}> \r\n                                    {headers.map((headerItem:any,index:any)=>{\r\n                                        return <td>{rowItem[headerItem]} </td>\r\n                                    })}\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        :\r\n                        <></>\r\n                    }\r\n                </tbody>\r\n                </Table>\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReportResults\r\n","const prod = {\n    url: {\n        API_URL: 'http://3.109.197.149/projects/survey_app/api'\n    }\n};\nconst dev = {\n    url: {\n        API_URL: 'http://localhost/folkslogic/survey_app/api'\n    }\n};\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod;","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useQueryParams } from \"./custom-hooks\";\nimport { config } from './Constants';\n\nconst BASE_URL = config.url.API_URL\n\nexport const GrillDownData = () => {\n  const queryParams = useQueryParams();\n  const managerId =  queryParams.get(\"managerId\")?.toString();\n  const [grillDownWorkers, setGrillDownWorkersData] = useState<any[]>([]);\n  const [fieldWorkerLoading, setFieldWorkerLoading] = useState(false);\n\n  const getgrillDownWorkers = async () => {\n    try {\n      setFieldWorkerLoading(true);\n\n      const res = await fetch(`${BASE_URL}/getAssemblyGrillData.php`, {\n        method: \"GET\",\n        headers: {\n          \"content-type\": \"application/json\",\n        }\n      });\n\n      const json = await res.json();\n\n      setGrillDownWorkersData(json.response.REPORT);\n    } catch (error) {\n      console.log({ error });\n    } finally {\n      setFieldWorkerLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getgrillDownWorkers();\n  }, []);\n\n  const navigate = useNavigate();\n\n  const handleClick = (\n    state: string,\n    status: string\n  ) => {\n    navigate(\n      `/get-reports?state=${state}&status=${status}&managerId=${managerId}`\n    );\n  };\n\n  if (fieldWorkerLoading) {\n    return <h1>Loading...</h1>;\n  }\n\n  if (grillDownWorkers.length === 0) {\n    return <h1>No Data found!</h1>;\n  }\n\n  return (\n    <div className=\"container p-5\">\n      <div className=\"row\">\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>State</th>\n              <th>Status</th>\n              <th>Survey Counts</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {grillDownWorkers.map((data, index) => (\n              <tr\n                key={index}\n                style={{ cursor: \"pointer\" }}\n                onClick={() =>\n                  handleClick(\n                    data.STATE_CD,\n                    data.STATUS\n                  )\n                }\n              >\n                <td>{index + 1}</td>\n                <td>{data.STATE_CD}</td>\n                <td>{data.STATUS}</td>\n                <td>{data.SURVEYS}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useQueryParams } from \"./custom-hooks\";\r\nimport { config } from './Constants';\r\n\r\nconst BASE_URL = config.url.API_URL\r\n\r\nexport const GetReports = () => {\r\n  const queryParams = useQueryParams();\r\n \r\n  const [reportWorkers, setReportWorkersData] = useState<any[]>([]);\r\n  const [fieldWorkerLoading, setFieldWorkerLoading] = useState(false);\r\n\r\n  const getreportWorkers = async () => {\r\n    try {\r\n      setFieldWorkerLoading(true);\r\n\r\n      const res = await fetch(`${BASE_URL}/getReports.php`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          state: queryParams.get(\"state\"),\r\n          status: queryParams.get(\"status\"),\r\n        }),\r\n      });\r\n\r\n      const json = await res.json();\r\n\r\n      setReportWorkersData(json.response.REPORT);\r\n    } catch (error) {\r\n      console.log({ error });\r\n    } finally {\r\n      setFieldWorkerLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getreportWorkers();\r\n  }, []);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleClick = (\r\n    code: string,\r\n    status: string\r\n  ) => {\r\n    navigate(\r\n      `/get-report-details?code=${code}&status=${status}&state=${queryParams.get(\"state\")}&managerId=${queryParams.get(\"managerId\")}`\r\n    );\r\n  };\r\n\r\n  if (fieldWorkerLoading) {\r\n    return <h1>Loading...</h1>;\r\n  }\r\n\r\n  if (!reportWorkers) {\r\n    return <h1>No Data found!</h1>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container p-5\">\r\n      <div className=\"row\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Assembly Code</th>\r\n              <th>Assembly Name</th>\r\n              <th>Completed</th>\r\n              <th>Status</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {reportWorkers.map((data, index) => (\r\n              <tr\r\n                key={index}\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() =>\r\n                  handleClick(\r\n                    data.ASSEMBLY_CODE,\r\n                    data.STATUS\r\n                  )\r\n                }\r\n              >\r\n                <td>{index + 1}</td>\r\n                <td>{data.ASSEMBLY_CODE}</td>\r\n                <td>{data.ASSEMBLY_NAME}</td>\r\n                <td>{data.COMPLETED}</td>\r\n                <td>{data.STATUS}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useEffect, useState } from \"react\";\r\nimport { useQueryParams } from \"./custom-hooks\";\r\nimport { config } from './Constants';\r\nimport {\r\n  Map,\r\n  Marker,\r\n  IProvidedProps,\r\n  GoogleApiWrapper,\r\n} from \"google-maps-react\";\r\nimport { Button,Table} from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst BASE_URL = config.url.API_URL\r\ninterface Props extends IProvidedProps {}\r\n\r\nexport const GetReportDetails = ({ google }: Props) => {\r\n  const navigate = useNavigate();\r\n  const queryParams = useQueryParams();\r\n  const [reportDetailsWorker, setReportDetailsWorkerData] = useState<any[]>([]);\r\n  const [fieldWorkerLoading, setFieldWorkerLoading] = useState(false);\r\n\r\n  const getreportDetailsWorker = async () => {\r\n    try {\r\n      setFieldWorkerLoading(true);\r\n\r\n      const res = await fetch(`${BASE_URL}/getReportDetails.php`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          code: queryParams.get(\"code\"),\r\n          status: queryParams.get(\"status\"),\r\n          state: queryParams.get(\"state\"),\r\n        }),\r\n      });\r\n\r\n      const json = await res.json();\r\n\r\n      setReportDetailsWorkerData(json.response.REPORT);\r\n    } catch (error) {\r\n      console.log({ error });\r\n    } finally {\r\n      setFieldWorkerLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getreportDetailsWorker();\r\n  }, []);\r\n\r\n  const actionOnCLick = (data:any)=>{\r\n    const managerId =  queryParams.get(\"managerId\")?.toString();\r\n    navigate(`/actions?RId=${data.RECORD_ID}&managerId=${managerId}`);\r\n  }\r\n\r\n  if (fieldWorkerLoading) {\r\n    return <h1>Loading...</h1>;\r\n  }\r\n\r\n  if (reportDetailsWorker.length === 0) {\r\n    return <h1>No Data found!</h1>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container p-5\">\r\n      <div className=\"row\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr style={{ position: \"sticky\", top: 0, background:\"#fff\" }}>\r\n                <th>#</th>\r\n                <th>Interviewer Name</th>\r\n                <th>Interviewer Mobile</th>\r\n\r\n                <th>Respondent</th>\r\n                <th>Respondent Mobile</th>\r\n                <th>Date Time</th>\r\n\r\n                <th>Assembly Code</th>\r\n                <th>Assembly Name</th>\r\n                \r\n                <th>Latitude</th>\r\n                <th>Longitude</th>\r\n                <th>A1</th>\r\n                <th>A2</th>\r\n                <th>A3</th>\r\n                <th>A4</th>\r\n                <th>A5</th>\r\n                <th>A6</th>\r\n                <th>A7</th>\r\n                <th>A8</th>\r\n                <th>A9</th>\r\n                <th>A10</th>\r\n                <th>A11</th>\r\n                <th>A12</th>\r\n                <th>A13</th>\r\n                <th>A14</th>\r\n                <th>A15</th>\r\n                <th>A16</th>\r\n                <th>A17</th>\r\n                <th>A18</th>\r\n                <th>A19</th>\r\n                <th>A20</th>\r\n                <th>A21</th>\r\n                <th>A22</th>\r\n                <th>RECORD_ID</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {reportDetailsWorker.map((data, index) => (\r\n              <tr\r\n                key={index}\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                <td>\r\n                  <Button variant=\"secondary\" onClick={() =>\r\n                    actionOnCLick(data)\r\n\r\n                  }\r\n                  >Action</Button >{' '}\r\n                </td>\r\n                    <td>{index + 1}</td>\r\n                    <td>{data.FIRST_NAME}</td>\r\n                    <td>{data.MOBILE}</td>\r\n                    <td>{data.RESPONDENT}</td>\r\n                    <td>{data.RESPONDENT_MOBILE}</td>\r\n                    <td>{data.DATETIME}</td>\r\n                    <td>{data.ASSEMBLY_CODE}</td>\r\n                    <td>{data.ASSEMBLY_NAME}</td>\r\n                    \r\n                    <td>{data.LATITUDE}</td>\r\n                    <td>{data.LONGITUDE}</td>\r\n\r\n                    <td>{data.A1}</td>\r\n                    <td>{data.A2}</td>\r\n                    <td>{data.A3}</td>\r\n                    <td>{data.A4}</td>\r\n                    <td>{data.A5}</td>\r\n                    <td>{data.A6}</td>\r\n                    <td>{data.A7}</td>\r\n                    <td>{data.A8}</td>\r\n                    <td>{data.A9}</td>\r\n                    <td>{data.A10}</td>\r\n\r\n                    <td>{data.A11}</td>\r\n                    <td>{data.A12}</td>\r\n                    <td>{data.A13}</td>\r\n                    <td>{data.A14}</td>\r\n                    <td>{data.A15}</td>\r\n                    <td>{data.A16}</td>\r\n                    <td>{data.A17}</td>\r\n                    <td>{data.A18}</td>\r\n                    <td>{data.A19}</td>\r\n                    <td>{data.A20}</td>\r\n\r\n                    <td>{data.A21}</td>\r\n                    <td>{data.A22}</td>\r\n\r\n                    <td>{data.RECORD_ID}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"row\">\r\n            <Map\r\n              google={google}\r\n              initialCenter={{\r\n                lat: reportDetailsWorker[0].LATITUDE,\r\n                lng: reportDetailsWorker[0].LONGITUDE,\r\n              }}\r\n              containerStyle={{ width: \"80vw\", height: \"80vh\" }}\r\n              // @ts-ignore\r\n              mapTypeControl={false}\r\n              streetViewControl={false}\r\n            >\r\n              {reportDetailsWorker.map((marker, index) => {\r\n                let LAT_LONG_TYPE = marker.LAT_LONG_TYPE ;\r\n                let newMarker;\r\n                if (LAT_LONG_TYPE === \"Booth_lat_long\" ) {\r\n                  newMarker = <Marker\r\n                  \r\n                  key={index}\r\n                  // @ts-ignore\r\n                  label={`${marker.BOOT_NO}`}\r\n                  // @ts-ignore\r\n                  title={`${index + 1} ${marker.BOOT_NO} ${marker.RESPONDENT.toLowerCase()} (${\r\n                    marker.MOBILE\r\n                  }) ${marker.DATETIME}`}\r\n                  position={{\r\n                    lat: marker.LATITUDE,\r\n                    lng: marker.LONGITUDE,\r\n                  }}\r\n                  icon={{\r\n\r\n                    url: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png' \r\n            \r\n                  }}\r\n                  />\r\n                } else {\r\n                    //Set here your icon in base the condition\r\n                    newMarker = <Marker\r\n                  \r\n                      key={index}\r\n                      // @ts-ignore\r\n                      // @ts-ignore\r\n                      title={`${index + 1} ${marker.RESPONDENT.toLowerCase()} (${\r\n                        marker.MOBILE\r\n                      }) ${marker.DATETIME}`}\r\n                      position={{\r\n                        lat: marker.LATITUDE,\r\n                        lng: marker.LONGITUDE,\r\n                      }}\r\n                      icon={{\r\n    \r\n                        url: 'http://maps.google.com/mapfiles/ms/icons/red-dot.png' \r\n                \r\n                      }}\r\n                  />\r\n\r\n                }\r\n                return (\r\n                  \r\n                  newMarker\r\n                );\r\n              })}\r\n            </Map>\r\n          </div>\r\n    </div>\r\n  );\r\n};\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyCE1xTn0k-vpSWBSLyfL47GonM-hvX-Y2g\",\r\n})(GetReportDetails);\r\n","import {initialState} from './Store'\r\n\r\nconst Reducer = (state:any, action:any) => {\r\n    switch (action.type) {\r\n\r\n        case 'UPDATE_LOGIN_DATA':\r\n            return {\r\n                ...state,\r\n                user: {...state.user,\r\n                    ...action.payload\r\n                }\r\n            };\r\n        case 'CLEAR_DATA':\r\n            return {\r\n                ...initialState\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default Reducer;\r\n\r\n","import React, {createContext, useReducer} from 'react';\r\nimport Reducer from './Reducer';\r\n\r\nconst initialState = {\r\n    user: {\r\n        status: 'UNAUTHORIZED',\r\n        userId: null,\r\n        email: null,\r\n        userName: null,\r\n        phone: null,\r\n        gender: null,\r\n        dob: null,\r\n        maritalStatus: null,\r\n        countryCode: null,\r\n        managerId:0,\r\n    },\r\n  \r\n    error: null,\r\n};\r\n\r\nconst Store = ({children}:any) => {\r\n    const [state, dispatch] = useReducer(Reducer, initialState);\r\n    return (\r\n        <Context.Provider value={[state, dispatch]}>\r\n            {children}\r\n        </Context.Provider>\r\n    );\r\n};\r\n\r\nconst Context = createContext<any>(initialState);\r\nexport {initialState, Context};\r\nexport default Store;\r\n\r\n// usage\r\n// import {Context} from '../State/Store'\r\n// const [STATE, dispatch] = useContext(Context)\r\n//  dispatch({type: 'TYPE', payload: {status: 'A'}})","import React, { useCallback, useContext, useState } from \"react\";\r\nimport { Form, Row, Col, Button, Container, Stack } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport BASE_URL from \"../Helpers/Constants\";\r\nimport {Context} from '../State/Store'\r\n\r\n\r\nconst Login = () => {\r\n    const [STATE, dispatch] = useContext(Context)\r\n    console.log(\"STATE\",STATE)\r\n    const navigate = useNavigate();\r\n    //  dispatch({type: 'TYPE', payload: {data: 'to update'}})\r\n    const onSubmit=()=>{\r\n        debugger;\r\n     \r\n        \r\n        if(formData.managerId!=''&& formData.userId!=\"\" && formData.password!=\"\"){\r\n            const URL = `${BASE_URL}/surveyAppLogin.php`\r\n            fetch(URL, {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                  },\r\n                body: JSON.stringify(formData),\r\n              })\r\n                .then(response => response.text())\r\n                .then(result => {\r\n                    let resultData = JSON.parse(result);\r\n                    debugger;\r\n                  if(resultData.status===\"SUCCESS\"){\r\n                    let dbResponse=resultData.response.REPORT[0];\r\n                    dispatch({\r\n                        type:'UPDATE_LOGIN_DATA',\r\n                        payload: {'status':'AUTHORIZED','userId':dbResponse.ID,'userName':dbResponse.USERNAME,'managerId':formData.managerId}\r\n                    })\r\n                    debugger;\r\n                    let sessionData =STATE.user\r\n                    sessionData.status = 'AUTHORIZED';\r\n                    sessionData.userId =dbResponse.ID;\r\n                    sessionData.userName =dbResponse.USERNAME;\r\n                    sessionData.managerId = formData.managerId;\r\n                    sessionStorage.setItem('userDetails' ,JSON.stringify(sessionData) )\r\n                    navigate('/Dashboard',{ state: sessionData.managerId });\r\n                }else{alert(\"login failed please contact admin\")}\r\n                    // setData(resultData.response.REPORT)\r\n                })\r\n                .catch(error => console.log('error', error));\r\n    }else{alert('Manager Id Required')}\r\n    }\r\n\r\n    const [formData, setFormData] = useState({\r\n        \r\n        \"userId\":\"\",\r\n        \"password\":\"\",\r\n        \"managerId\":\"\"\r\n\r\n    })\r\n    const onChangeText = useCallback((key,value) => {\r\n        console.log(\"value\",value)\r\n        setFormData((prev)=>{\r\n            return{\r\n                ...prev,\r\n                [key]: value,\r\n            }\r\n        })\r\n    }, [formData])\r\n\r\n    return (\r\n        <Container fluid=\"xl\">\r\n            <h1>Login</h1>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Form.Group className=\"mb-3\">\r\n                <Form.Label>Username *</Form.Label>\r\n                <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Username\"\r\n                    defaultValue=\"\"\r\n                    value={formData.userId} onChange={(value)=>onChangeText('userId',value.target.value)} \r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                <Form.Label>Password *</Form.Label>\r\n                <Form.Control\r\n                    required\r\n                    type=\"password\"\r\n                    placeholder=\"Enter Password\"\r\n                    defaultValue=\"\"\r\n                    value={formData.password} onChange={(value)=>onChangeText('password',value.target.value)} \r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                <Form.Label>Manager Id *</Form.Label>\r\n                <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Manager Id\"\r\n                    defaultValue=\"\"\r\n                    value={formData.managerId} onChange={(value)=>onChangeText('managerId',value.target.value)} \r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                </Form.Group>\r\n            </Row>\r\n            <Stack direction=\"horizontal\" gap={3}>\r\n                <Button variant=\"primary\" onClick={()=>onSubmit()}>Login</Button>\r\n                {/* <div className=\"vr\" /> */}\r\n                {/* <Button variant=\"secondary\">Sign up</Button> */}\r\n            </Stack>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, { useEffect, useState } from 'react'\r\nimport { Table,Card ,Button} from 'react-bootstrap';\r\nimport { useNavigate,useLocation } from 'react-router-dom';\r\nimport BASE_URL from \"../Helpers/Constants\";\r\nconst Dashboard=(props:any)=>{\r\n    debugger;\r\n    const { state } = useLocation();\r\n    debugger;\r\n    const navigate =useNavigate();\r\n   const navigateToReports =()=>{\r\n    navigate('/reports?managerId='+state);\r\n   }\r\n   const navigateToDrillDownReports =()=>{\r\n    navigate('/get-assembly-grill-down-data?managerId='+state);\r\n   }\r\n   const navigateToFieldWorkers =()=>{\r\n    navigate('/field-works?managerId='+state);\r\n   }\r\n    return (\r\n        <div>\r\n            <Card style={{ width: '18rem',float:'left',marginTop: '25px',marginLeft:'20px' }}>\r\n                {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                <Card.Body>\r\n                    <Card.Title>Reports</Card.Title>\r\n                    <Card.Text>\r\n                        Click below button to navigate to Reports.\r\n                    </Card.Text>\r\n                    <Button variant=\"primary\" onClick={()=>{\r\n                        navigateToReports()\r\n                    }}  >Go to Reports</Button>\r\n                </Card.Body>\r\n            </Card>\r\n            <Card style={{ width: '18rem',float:'left',marginTop: '25px',marginLeft:'20px' }}>\r\n                {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                <Card.Body>\r\n                    <Card.Title>Field Workers</Card.Title>\r\n                    <Card.Text>\r\n                    Click below button to navigate to Field Workers.\r\n                    </Card.Text>\r\n                    <Button variant=\"primary\" onClick={()=>{\r\n                        navigateToFieldWorkers()\r\n                    }}  >Go to Field Workers</Button>\r\n                </Card.Body>\r\n            </Card>\r\n            <Card style={{width: '18rem',float:'left',marginTop: '25px',marginLeft:'20px'}}>\r\n                {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                <Card.Body>\r\n                    <Card.Title>Drill-down Reports</Card.Title>\r\n                    <Card.Text>\r\n                        Click below button to navigate to Drill-down  Reports.\r\n                    </Card.Text>\r\n                    <Button variant=\"primary\" onClick={()=>{\r\n                        navigateToDrillDownReports()\r\n                    }}  >Go to Drill-down Reports</Button>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { useContext } from 'react'\r\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\r\nimport Cluster from \"../Maps/cluster\";\r\nimport { FieldWorkers } from \"../fieldWorkers\";\r\nimport ActionDetails from \"../Screens/ActionDetails\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Reports from \"../Screens/Reports\";\r\nimport ReportResults from \"../Screens/ReportResults\";\r\nimport { GrillDownData } from \"../grillDownData\";\r\nimport { GetReports } from '../getReports';\r\nimport GetReportDetails from '../getReportDetails';\r\nimport Login from \"../Screens/Login\";\r\nimport Dashboard from '../Screens/Dashboard';\r\nimport { Context } from '../State/Store'\r\nimport { Table,Container, Navbar, Button } from \"react-bootstrap\";\r\nexport default function Navigation() {\r\n    const [STATE,dispatch] = useContext(Context);\r\n     const navigate = useNavigate()\r\n    debugger;\r\n    let data = sessionStorage.getItem('userDetails') !=null ?  JSON.parse(sessionStorage.getItem('userDetails') || '{}') : {}\r\n    \r\n     console.log('sessionStorage',data)\r\n    // if(window.location.hash !== ''){\r\n    //     window.location.href = window.location.origin;\r\n    // }\r\n    const onSignOut = () => {\r\n        sessionStorage.clear();\r\n        dispatch({\r\n            type: 'UPDATE_LOGIN_DATA',\r\n            payload: { 'status': 'UNAUTHORIZED' }\r\n        })\r\n        navigate('/')\r\n    }\r\n    if(data?.status === 'AUTHORIZED'){\r\n        // dispatch({\r\n        //     type: 'UPDATE_LOGIN_DATA',\r\n        //     payload: { 'status': 'AUTHORIZED','userId':data.ID,'userName':data.USERNAME }\r\n        // })\r\n        return (\r\n        \r\n            <div>\r\n                 <div>\r\n                    <Navbar bg=\"primary\" variant=\"dark\" fixed=\"top\" >\r\n                        <Container>\r\n                            <Navbar.Brand >Welcome : {data.userName}</Navbar.Brand>\r\n                            <Navbar.Toggle />\r\n                            <Navbar.Collapse className=\"justify-content-end\">\r\n                              \r\n                                < Button  variant=\"danger\" onClick={()=>{\r\n                                    onSignOut()\r\n                                }}> Sign Out</Button>\r\n                            </Navbar.Collapse>\r\n                        </Container>\r\n                    </Navbar>\r\n                 </div>\r\n                 <div style={{marginTop:'10vh'}}>\r\n                 <Routes>\r\n                     <Route path=\"/Dashboard\" element={<Dashboard/>} />\r\n                     <Route path=\"/field-works\" element={<FieldWorkers />} />\r\n                     <Route path=\"/actions\"  element={<ActionDetails />} />\r\n                     <Route path=\"/details\" element={<Cluster />} />\r\n                     <Route path=\"/get-assembly-grill-down-data\" element={<GrillDownData />} />\r\n                     <Route path=\"/get-report-details\" element={<GetReportDetails />} />\r\n                     <Route path=\"/get-reports\" element={<GetReports />} />\r\n                     <Route path=\"/login\" element={<Login />} />\r\n                     <Route path=\"/report-results\" element={<ReportResults />} />\r\n                     <Route path=\"/reports\" element={<Reports />} />\r\n                 </Routes>\r\n                 </div>\r\n            </div>\r\n             )\r\n    }\r\n    else{\r\n        return (\r\n        <div>\r\n\r\n            <Routes><Route path=\"/\" element={<Login />} /></Routes>\r\n        </div>)\r\n    }\r\n    \r\n}\r\n","import React from \"react\";\nimport { HashRouter } from \"react-router-dom\";\nimport Navigation from \"./Navigator/Navigation\";\nimport Store from \"./State/Store\";\n\n\n\n\nfunction App() {\n  return (\n    <HashRouter>\n        <Store>\n          <Navigation />\n        </Store>\n      </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}