{"version":3,"sources":["custom-hooks.ts","Maps/cluster.tsx","fieldWorkers.tsx","Screens/ActionDetails.tsx","Helpers/Constants.tsx","Screens/Reports.tsx","Screens/ReportResults.tsx","Constants.js","grillDownData.tsx","getReports.tsx","getReportDetails.tsx","App.tsx","index.tsx"],"names":["useQueryParams","window","location","search","hash","React","useMemo","URLSearchParams","split","GoogleApiWrapper","apiKey","google","queryParams","navigate","useNavigate","useState","get","moment","format","toDate","setToDate","fromDate","setFromDate","surveyData","setSurveyData","surveyDataLoading","setSurveyDataLoading","called","setCalled","getSurveyData","a","fetch","method","headers","body","JSON","stringify","uid","to","from","state","assembly","res","console","log","json","status","response","REPORT","error","toString","useEffect","className","length","htmlFor","name","type","value","placeholder","onChange","e","target","Table","striped","hover","size","map","data","index","Button","variant","onClick","managerId","RECORD_ID","actionOnCLick","RESPONDENT","MOBILE","DATETIME","LAT","LONGITUDE","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","A11","A12","A13","A14","A15","A16","A17","A18","A19","A20","A21","A22","initialCenter","lat","lng","containerStyle","width","height","mapTypeControl","streetViewControl","marker","label","title","toLowerCase","position","FieldWorkers","fieldWorkers","setFieldWorkersData","fieldWorkerLoading","setFieldWorkerLoading","getFieldWorkers","manager_id","style","cursor","id","ID","FIRST_NAME","date","DATE","STATE","ASSEMBLY","SURVEYS","ActionDetails","RID","formData","setFormData","onChangeText","useCallback","key","prev","Form","onSubmit","alert","Group","controlId","Label","Control","readOnly","Select","dp","comments","auditType","BASE_URL","Reports","setData","fetchReportsData","then","text","result","resultData","parse","catch","display","alignItems","justifyContent","flexDirection","bordered","item","query","ReportResults","props","useLocation","setHeaders","rowData","setRowData","fetchReportResultData","URL","Object","keys","rowItem","headerItem","config","url","API_URL","GrillDownData","grillDownWorkers","setGrillDownWorkersData","getgrillDownWorkers","STATE_CD","STATUS","GetReports","reportWorkers","setReportWorkersData","getreportWorkers","code","ASSEMBLY_CODE","ASSEMBLY_NAME","COMPLETED","reportDetailsWorker","setReportDetailsWorkerData","getreportDetailsWorker","RESPONDENT_MOBILE","LATITUDE","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5f6f7c3.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const useQueryParams = () => {\n  const { search, hash } = window.location;\n\n  return React.useMemo(\n    () => new URLSearchParams(hash ? `?${hash.split(\"?\")[1]}` : search),\n    [search, hash]\n  );\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useState } from \"react\";\nimport {\n  Map,\n  Marker,\n  IProvidedProps,\n  GoogleApiWrapper,\n} from \"google-maps-react\";\nimport moment from \"moment\";\nimport { useQueryParams } from \"../custom-hooks\";\nimport { Button,Table} from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nconst BASE_URL = \"http://3.109.197.149/projects/survey_app/api\";\n\ninterface Props extends IProvidedProps {}\n\nconst Cluster = ({ google }: Props) => {\n  const queryParams = useQueryParams();\n  const navigate = useNavigate();\n  const [toDate, setToDate] = useState(\n    queryParams.get(\"date\") || moment().format(\"YYYY-MM-DD\")\n  );\n  const [fromDate, setFromDate] = useState(\n    queryParams.get(\"date\") || moment().format(\"YYYY-MM-DD\")\n  );\n  const [surveyData, setSurveyData] = useState<any[]>([]);\n\n  const [surveyDataLoading, setSurveyDataLoading] = useState(false);\n\n  const [called, setCalled] = useState(false);\n\n  const getSurveyData = async () => {\n    try {\n      setCalled(false);\n      setSurveyDataLoading(true);\n\n      const res = await fetch(`${BASE_URL}/getSurveyData.php`, {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          uid: queryParams.get(\"id\"),\n          to: toDate,\n          from: fromDate,\n          state: queryParams.get(\"state\"),\n          assembly: queryParams.get(\"assembly\"),\n        }),\n      });\n      console.log(res)\n      const json = await res.json();\n\n      if (json.status === \"ERROR\") {\n        setSurveyData([]);\n        return;\n      }\n      setSurveyData(json.response.REPORT);\n    } catch (error) {\n      console.log({ error });\n    } finally {\n      setCalled(true);\n      setSurveyDataLoading(false);\n    }\n  };\n  const id =  queryParams.get(\"id\")?.toString();\n\n  const actionOnCLick = (data:any)=>{\n    const managerId =  queryParams.get(\"managerId\")?.toString();\n    navigate(`/actions?RId=${data.RECORD_ID}&managerId=${managerId}`);\n  }\n  useEffect(() => {\n    getSurveyData();\n  }, [fromDate, toDate]);\n\n  return (\n    <div className=\"container p-5\">\n      <div className=\"col-md-8 my-5\">\n        <div className=\"row p-2\">\n          <h1>\n            Showing {surveyData.length} records for {queryParams.get(\"name\")}\n          </h1>\n        </div>\n        <div className=\"row p-2\">\n          <div className=\"col-md-3\">\n            <label htmlFor=\"from\">From Date</label>\n          </div>\n\n          <input\n            name=\"from\"\n            type=\"date\"\n            value={fromDate}\n            className=\"col-md-3\"\n            placeholder=\"Calendar\"\n            onChange={(e) => setFromDate(e.target.value)}\n          />\n\n          <label className=\"col-md-3\" htmlFor=\"to\">\n            To Date\n          </label>\n          <input\n            name=\"to\"\n            type=\"date\"\n            value={toDate}\n            className=\"col-md-3\"\n            placeholder=\"Calendar\"\n            onChange={(e) => setToDate(e.target.value)}\n          />\n        </div>\n      </div>\n\n      {surveyDataLoading && <h1>Loading...</h1>}\n\n      {called && surveyData.length === 0 && <h1>No Data found!</h1>}\n\n      {surveyData.length > 0 && (\n        <>\n          <div className=\"row\">\n            <Table striped hover size=\"sm\">\n              <thead>\n                <tr>\n                  <th>Actions</th>\n                  <th>#</th>\n                  <th>Respondent</th>\n                  <th>Mobile</th>\n                  <th>Date Time</th>\n                  <th>Latitude</th>\n                  <th>Longitude</th>\n                  <th>A1</th>\n                  <th>A2</th>\n                  <th>A3</th>\n                  <th>A4</th>\n                  <th>A5</th>\n                  <th>A6</th>\n                  <th>A7</th>\n                  <th>A8</th>\n                  <th>A9</th>\n                  <th>A10</th>\n                  <th>A12</th>\n                  <th>A13</th>\n                  <th>A14</th>\n                  <th>A15</th>\n                  <th>A16</th>\n                  <th>A17</th>\n                  <th>A18</th>\n                  <th>A19</th>\n                  <th>A20</th>\n                  <th>A21</th>\n                  <th>A22</th>\n                  <th>RECORD_ID</th>\n\n                </tr>\n              </thead>\n              <tbody>\n                {surveyData.map((data, index) => (\n                  <tr key={index}>\n                    <td>\n                    <Button variant=\"secondary\"  onClick={() =>\n                 actionOnCLick(data)\n                \n                }\n                >Action</Button >{' '}\n                    </td>\n                    <td>{index + 1}</td>\n                    <td>{data.RESPONDENT}</td>\n                    <td>{data.MOBILE}</td>\n                    <td>{data.DATETIME}</td>\n                    <td>{data.LAT}</td>\n                    <td>{data.LONGITUDE}</td>\n\n                    <td>{data.A1}</td>\n                    <td>{data.A2}</td>\n                    <td>{data.A3}</td>\n                    <td>{data.A4}</td>\n                    <td>{data.A5}</td>\n                    <td>{data.A6}</td>\n                    <td>{data.A7}</td>\n                    <td>{data.A8}</td>\n                    <td>{data.A9}</td>\n                    <td>{data.A10}</td>\n                    <td>{data.A11}</td>\n                    <td>{data.A12}</td>\n                    <td>{data.A13}</td>\n                    <td>{data.A14}</td>\n                    <td>{data.A15}</td>\n                    <td>{data.A16}</td>\n                    <td>{data.A17}</td>\n                    <td>{data.A18}</td>\n                    <td>{data.A19}</td>\n                    <td>{data.A20}</td>\n                    <td>{data.A21}</td>\n                    <td>{data.A22}</td>\n                    <td>{data.RECORD_ID}</td>\n                  </tr>\n                ))}\n              </tbody>\n</Table>\n          </div>\n\n          <div className=\"row\">\n            <Map\n              google={google}\n              initialCenter={{\n                lat: surveyData[0].LAT,\n                lng: surveyData[0].LONGITUDE,\n              }}\n              containerStyle={{ width: \"80vw\", height: \"80vh\" }}\n              // @ts-ignore\n              mapTypeControl={false}\n              streetViewControl={false}\n            >\n              {surveyData.map((marker, index) => {\n                return (\n                  <Marker\n                    key={index}\n                    // @ts-ignore\n                    label={`${index + 1}`}\n                    // @ts-ignore\n                    title={`${index + 1} ${marker.RESPONDENT.toLowerCase()} (${\n                      marker.MOBILE\n                    }) ${marker.DATETIME}`}\n                    position={{\n                      lat: marker.LAT,\n                      lng: marker.LONGITUDE,\n                    }}\n                  />\n                );\n              })}\n            </Map>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCE1xTn0k-vpSWBSLyfL47GonM-hvX-Y2g\",\n})(Cluster);\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useQueryParams } from \"./custom-hooks\";\n\nconst BASE_URL = \"http://3.109.197.149/projects/survey_app/api\";\n\nexport const FieldWorkers = () => {\n  const queryParams = useQueryParams();\n\n  const [fieldWorkers, setFieldWorkersData] = useState<any[]>([]);\n  const [fieldWorkerLoading, setFieldWorkerLoading] = useState(false);\n\n  const getFieldWorkers = async () => {\n    try {\n      setFieldWorkerLoading(true);\n\n      const res = await fetch(`${BASE_URL}/getFieldWorkers.php`, {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          manager_id: queryParams.get(\"managerId\"),\n        }),\n      });\n\n      const json = await res.json();\n\n      setFieldWorkersData(json.response.REPORT);\n    } catch (error) {\n      console.log({ error });\n    } finally {\n      setFieldWorkerLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getFieldWorkers();\n  }, []);\n\n  const navigate = useNavigate();\n\n  const handleClick = (\n    id: string,\n    name: string,\n    date: string,\n    state: string,\n    assembly: string\n  ) => {\n    navigate(`/details?id=${id}&name=${name}&date=${date}&state=${state}&assembly=${assembly}&managerId=${queryParams.get(\"managerId\")}`);\n  };\n\n  if (fieldWorkerLoading) {\n    return <h1>Loading...</h1>;\n  }\n\n  if (fieldWorkers.length === 0) {\n    return <h1>No Data found!</h1>;\n  }\n\n  return (\n    <div className=\"container p-5\">\n      <div className=\"row\">\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Date</th>\n              <th>Field Worker</th>\n              <th>Surveys</th>\n              <th>Mobile</th>\n              <th>State</th>\n              <th>Assembly</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {fieldWorkers.map((data, index) => (\n              <tr\n                key={index}\n                style={{ cursor: \"pointer\" }}\n                onClick={() =>\n                  handleClick(\n                    data.ID,\n                    data.FIRST_NAME,\n                    data.DATE,\n                    data.STATE,\n                    data.ASSEMBLY\n                  )\n                }\n              >\n                <td>{index + 1}</td>\n                <td>{data.DATE}</td>\n                <td>{data.FIRST_NAME}</td>\n                <td>{data.SURVEYS}</td>\n                <td>{data.MOBILE}</td>\n                <td>{data.STATE}</td>\n                <td>{data.ASSEMBLY}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","import { useEffect, useState,useCallback } from \"react\";\r\nimport {\r\n  Map,\r\n  Marker,\r\n  IProvidedProps,\r\n  GoogleApiWrapper,\r\n} from \"google-maps-react\";\r\nimport moment from \"moment\";\r\nimport { useQueryParams } from \"../custom-hooks\";\r\nimport { Button,Table,Form} from \"react-bootstrap\";\r\n\r\n\r\nconst ActionDetails = () => {\r\n    \r\nconst BASE_URL = \"http://3.109.197.149/projects/survey_app/api\";\r\n    const queryParams = useQueryParams();\r\n    const RID =  queryParams.get(\"RId\")?.toString();\r\n\r\n\r\n    const [formData, setFormData] = useState({\r\n        \r\n        'recordId':RID,\r\n        'comments':\"\",\r\n        'auditType':\"\",\r\n        'status':\"Valid\",\r\n        'createdBy': queryParams.get(\"managerId\")?.toString(),\r\n\r\n    })\r\n    const onSubmit = () => {\r\n      console.log(formData)\r\n      getFieldWorkers();\r\n      alert('Data Submitted Successfully')\r\n    }\r\n    const onChangeText = useCallback((key,value) => {\r\n        console.log(\"value\",value)\r\n        setFormData((prev)=>{\r\n            return{\r\n                ...prev,\r\n                [key]: value,\r\n            }\r\n        })\r\n    }, [formData])\r\n\r\n    const getFieldWorkers = async () => {\r\n        try {\r\n       \r\n          const res = await fetch(`${BASE_URL}/saveActionComments.php`, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"content-type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(\r\n                formData\r\n            ),\r\n          });\r\n    \r\n        \r\n        \r\n        } catch (error) {\r\n          console.log({ error });\r\n        } finally {\r\n          \r\n        }\r\n      };\r\n\r\n    //   useEffect(() => {\r\n    //     getFieldWorkers();\r\n    //   }, []);\r\n    return (\r\n        <div className=\"container p-5\">\r\n        <div className=\"row\">\r\n        <div>\r\n            <Form onSubmit={onSubmit}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Record Id</Form.Label>\r\n                    <Form.Control  value={RID} type=\"text\" placeholder=\"Record Id\" readOnly  />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicStatus\">\r\n                    <Form.Label>Status</Form.Label>\r\n                            <Form.Select aria-label=\"Default select example\" onChange={(dp)=>onChangeText('status',dp.target.value)}>\r\n                               \r\n                                <option value=\"Valid\">Valid</option>\r\n                                <option value=\"In Valid\">In Valid</option>\r\n                                <option value=\"Need Review\">Need Review</option>\r\n                            </Form.Select>\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicComments\" >\r\n                    <Form.Label>Comments</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Comments\"  value={formData.comments} onChange={(value)=>onChangeText('comments',value.target.value)} />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicComments\">\r\n                    <Form.Label>Auditor Type</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Auditor Type\" value={formData.auditType} onChange={(value)=>onChangeText('auditType',value.target.value)}  />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActionDetails","const BASE_URL = \"http://3.109.197.149/projects/survey_app/api\"; \r\n//const BASE_URL = \"http://127.0.0.1:300/survey_app/api\"; \r\n\r\nexport default BASE_URL;","import React, { useEffect, useState } from 'react'\r\nimport { Table } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport BASE_URL from \"../Helpers/Constants\";\r\n\r\nconst Reports=()=>{\r\n    const navigate = useNavigate();\r\n    const [data, setData] = useState([])\r\n    const fetchReportsData = async () => {\r\n        const URL = `${BASE_URL}/getReportsIndividual.php`\r\n        fetch(`${BASE_URL}/getReportsIndividual.php`,  {\r\n            method: 'GET',\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n              },\r\n          })\r\n            .then(response => response.text())\r\n            .then(result => {\r\n                let resultData = JSON.parse(result);\r\n                // console.log('result',resultData)\r\n                setData(resultData.response.REPORT)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n        };\r\n    \r\n    const submitQuery=(query: any)=>{\r\n        navigate('/reportresults', { state: query });\r\n    }\r\n    useEffect(() => {\r\n        fetchReportsData()\r\n    }, [])\r\n    return (\r\n        <div style={{display:'flex',\r\n                     alignItems: 'center',\r\n                     justifyContent: 'center',\r\n                     flexDirection: 'column'\r\n                     }}>\r\n            <h1>Reports</h1>             \r\n            <div style={{width:'90vw'}}>\r\n                <Table bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                    <th>#</th>\r\n                    <th>MODULE</th>\r\n                    <th>REPORT_NAME</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                // JSON.stringify(data)\r\n                data.map((item,index)=>{\r\n                    return (\r\n                        <tr key={index.toString()}>\r\n                        <td >{index+1}</td>\r\n                        <td>{item['MODULE']} </td>\r\n                        <td>{item['REPORT_NAME']} </td>\r\n                        <td><button onClick={()=>{submitQuery(item['QUERY'])}}>Pull Report</button></td>\r\n                        </tr>\r\n                    )\r\n                    })\r\n                }\r\n                </tbody>\r\n                </Table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reports\r\n","import { useEffect, useState } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport BASE_URL from \"../Helpers/Constants\";\r\n\r\nconst ReportResults=(props:any)=> {\r\n    const { state } = useLocation();\r\n    const [headers, setHeaders] = useState<Array<string>>([]);\r\n    const [rowData, setRowData] = useState<Array<string>>([]);\r\n\r\n    const fetchReportResultData = async () => {\r\n        const URL = `${BASE_URL}/getReportsResults.php`\r\n        fetch(URL, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n              },\r\n            body: JSON.stringify({\r\n                query: state,\r\n            }),\r\n          })\r\n            .then(response => response.text())\r\n            .then(result => {\r\n                let resultData = JSON.parse(result);\r\n                const headers = Object.keys(resultData.response[0]);\r\n                console.log('row data', resultData.response)\r\n                console.log('headers', headers)\r\n                setRowData(resultData.response)\r\n                setHeaders(headers)\r\n                // setData(resultData.response.REPORT)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n        };\r\n    useEffect(() => {\r\n        fetchReportResultData()\r\n    }, [])\r\n    return (\r\n        // <div style={{display:'flex',\r\n        //              alignItems: 'center',\r\n        //              justifyContent: 'center',\r\n        //              flexDirection: 'column'\r\n        //              }}>\r\n        //     <h1>Reports</h1>             \r\n        //     <div style={{width:'90vw'}}>\r\n                // <Table bordered hover>\r\n                // <thead>\r\n                //     <tr>\r\n                //     <th>#</th>\r\n                //     <th>ACCESS_LEVEL</th>\r\n                //     <th>MODULE</th>\r\n                //     <th>REPORT_ID</th>\r\n                //     <th>REPORT_NAME</th>\r\n                //     <th>QUERY</th>\r\n                //     </tr>\r\n                // </thead>\r\n                // <tbody>\r\n                //     <tr>\r\n                //     <td>{index+1}</td>\r\n                //     <td>{item['ACCESS_LEVEL']} </td>\r\n                //     <td>{item['MODULE']} </td>\r\n                //     <td>{item['REPORT_ID']} </td>\r\n                //     <td>{item['REPORT_NAME']} </td>\r\n                //     <td>{item['QUERY']} </td>\r\n                //     <td><button onClick={()=>{submitQuery(item['QUERY'])}}>Execute</button></td>\r\n                //     </tr>\r\n                // </tbody>\r\n                // </Table>\r\n        //     </div>\r\n        // </div>\r\n\r\n\r\n        <div style={{display:'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column'\r\n        }} >\r\n            <div style={{width:'90vw'}}>\r\n            <h1>Reports Results</h1>\r\n            <Table bordered hover>\r\n                <thead>\r\n               \r\n                    {\r\n                \r\n                headers.length > 0 ? \r\n                <tr>\r\n                    {\r\n                    headers.map((item, index)=>{\r\n                        return (<th>{item}</th>)\r\n                    })}\r\n                </tr>\r\n                :\r\n                <></>\r\n                    }\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        rowData.length >0 ? \r\n                            rowData.map((rowItem,index)=>{\r\n                                return (\r\n                                    <tr key={index.toString()}> \r\n                                    {headers.map((headerItem:any,index:any)=>{\r\n                                        return <td>{rowItem[headerItem]} </td>\r\n                                    })}\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        :\r\n                        <></>\r\n                    }\r\n                </tbody>\r\n                </Table>\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReportResults\r\n","const prod = {\n    url: {\n        API_URL: 'http://3.109.197.149/projects/survey_app/api'\n    }\n};\nconst dev = {\n    url: {\n        API_URL: 'http://localhost/folkslogic/survey_app/api'\n    }\n};\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod;","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useQueryParams } from \"./custom-hooks\";\nimport { config } from './Constants';\n\nconst BASE_URL = config.url.API_URL\n\nexport const GrillDownData = () => {\n  const queryParams = useQueryParams();\n\n  const [grillDownWorkers, setGrillDownWorkersData] = useState<any[]>([]);\n  const [fieldWorkerLoading, setFieldWorkerLoading] = useState(false);\n\n  const getgrillDownWorkers = async () => {\n    try {\n      setFieldWorkerLoading(true);\n\n      const res = await fetch(`${BASE_URL}/getAssemblyGrillData.php`, {\n        method: \"GET\",\n        headers: {\n          \"content-type\": \"application/json\",\n        }\n      });\n\n      const json = await res.json();\n\n      setGrillDownWorkersData(json.response.REPORT);\n    } catch (error) {\n      console.log({ error });\n    } finally {\n      setFieldWorkerLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getgrillDownWorkers();\n  }, []);\n\n  const navigate = useNavigate();\n\n  const handleClick = (\n    state: string,\n    status: string\n  ) => {\n    navigate(\n      `/get-reports?state=${state}&status=${status}`\n    );\n  };\n\n  if (fieldWorkerLoading) {\n    return <h1>Loading...</h1>;\n  }\n\n  if (grillDownWorkers.length === 0) {\n    return <h1>No Data found!</h1>;\n  }\n\n  return (\n    <div className=\"container p-5\">\n      <div className=\"row\">\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>State</th>\n              <th>Status</th>\n              <th>Survey Counts</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {grillDownWorkers.map((data, index) => (\n              <tr\n                key={index}\n                style={{ cursor: \"pointer\" }}\n                onClick={() =>\n                  handleClick(\n                    data.STATE_CD,\n                    data.STATUS\n                  )\n                }\n              >\n                <td>{index + 1}</td>\n                <td>{data.STATE_CD}</td>\n                <td>{data.STATUS}</td>\n                <td>{data.SURVEYS}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useQueryParams } from \"./custom-hooks\";\nimport { config } from './Constants';\n\nconst BASE_URL = config.url.API_URL\n\nexport const GetReports = () => {\n  const queryParams = useQueryParams();\n\n  const [reportWorkers, setReportWorkersData] = useState<any[]>([]);\n  const [fieldWorkerLoading, setFieldWorkerLoading] = useState(false);\n\n  const getreportWorkers = async () => {\n    try {\n      setFieldWorkerLoading(true);\n\n      const res = await fetch(`${BASE_URL}/getReports.php`, {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          state: queryParams.get(\"state\"),\n          status: queryParams.get(\"status\"),\n        }),\n      });\n\n      const json = await res.json();\n\n      setReportWorkersData(json.response.REPORT);\n    } catch (error) {\n      console.log({ error });\n    } finally {\n      setFieldWorkerLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getreportWorkers();\n  }, []);\n\n  const navigate = useNavigate();\n\n  const handleClick = (\n    code: string,\n    status: string\n  ) => {\n    navigate(\n      `/get-report-details?code=${code}&status=${status}`\n    );\n  };\n\n  if (fieldWorkerLoading) {\n    return <h1>Loading...</h1>;\n  }\n\n  if (!reportWorkers) {\n    return <h1>No Data found!</h1>;\n  }\n\n  return (\n    <div className=\"container p-5\">\n      <div className=\"row\">\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Assembly Code</th>\n              <th>Assembly Name</th>\n              <th>Completed</th>\n              <th>Status</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {reportWorkers.map((data, index) => (\n              <tr\n                key={index}\n                style={{ cursor: \"pointer\" }}\n                onClick={() =>\n                  handleClick(\n                    data.ASSEMBLY_CODE,\n                    data.STATUS\n                  )\n                }\n              >\n                <td>{index + 1}</td>\n                <td>{data.ASSEMBLY_CODE}</td>\n                <td>{data.ASSEMBLY_NAME}</td>\n                <td>{data.COMPLETED}</td>\n                <td>{data.STATUS}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useState } from \"react\";\nimport { useQueryParams } from \"./custom-hooks\";\nimport { config } from './Constants';\nimport {\n  Map,\n  Marker,\n  IProvidedProps,\n  GoogleApiWrapper,\n} from \"google-maps-react\";\nimport { Button,Table} from \"react-bootstrap\";\n\nconst BASE_URL = config.url.API_URL\ninterface Props extends IProvidedProps {}\n\nexport const GetReportDetails = ({ google }: Props) => {\n  const queryParams = useQueryParams();\n\n  const [reportDetailsWorker, setReportDetailsWorkerData] = useState<any[]>([]);\n  const [fieldWorkerLoading, setFieldWorkerLoading] = useState(false);\n\n  const getreportDetailsWorker = async () => {\n    try {\n      setFieldWorkerLoading(true);\n\n      const res = await fetch(`${BASE_URL}/getReportDetails.php`, {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          code: queryParams.get(\"code\"),\n          status: queryParams.get(\"status\"),\n        }),\n      });\n\n      const json = await res.json();\n\n      setReportDetailsWorkerData(json.response.REPORT);\n    } catch (error) {\n      console.log({ error });\n    } finally {\n      setFieldWorkerLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getreportDetailsWorker();\n  }, []);\n\n\n  if (fieldWorkerLoading) {\n    return <h1>Loading...</h1>;\n  }\n\n  if (reportDetailsWorker.length === 0) {\n    return <h1>No Data found!</h1>;\n  }\n\n  return (\n    <div className=\"container p-5\">\n      <div className=\"row\">\n        <table className=\"table\">\n          <thead>\n            <tr>\n                <th>#</th>\n                <th>Respondent</th>\n                <th>Respondent Mobile</th>\n                <th>Date Time</th>\n\n                <th>Assembly Code</th>\n                <th>Assembly Name</th>\n                <th>First Name</th>\n                <th>Mobile</th>\n                <th>Latitude</th>\n                <th>Longitude</th>\n                <th>A1</th>\n                <th>A2</th>\n                <th>A3</th>\n                <th>A4</th>\n                <th>A5</th>\n                <th>A6</th>\n                <th>A7</th>\n                <th>A8</th>\n                <th>A9</th>\n                <th>A10</th>\n                <th>A11</th>\n                <th>A12</th>\n                <th>A13</th>\n                <th>A14</th>\n                <th>A15</th>\n                <th>A16</th>\n                <th>A17</th>\n                <th>A18</th>\n                <th>A19</th>\n                <th>A20</th>\n                <th>A21</th>\n                <th>A22</th>\n                <th>RECORD_ID</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {reportDetailsWorker.map((data, index) => (\n              <tr\n                key={index}\n                style={{ cursor: \"pointer\" }}\n              >\n                <td>{index + 1}</td>\n                <td>{data.RESPONDENT}</td>\n                    <td>{data.RESPONDENT_MOBILE}</td>\n                    <td>{data.DATETIME}</td>\n                    <td>{data.ASSEMBLY_CODE}</td>\n                    <td>{data.ASSEMBLY_NAME}</td>\n                    <td>{data.FIRST_NAME}</td>\n                    <td>{data.MOBILE}</td>\n                    <td>{data.LATITUDE}</td>\n                    <td>{data.LONGITUDE}</td>\n\n                    <td>{data.A1}</td>\n                    <td>{data.A2}</td>\n                    <td>{data.A3}</td>\n                    <td>{data.A4}</td>\n                    <td>{data.A5}</td>\n                    <td>{data.A6}</td>\n                    <td>{data.A7}</td>\n                    <td>{data.A8}</td>\n                    <td>{data.A9}</td>\n                    <td>{data.A10}</td>\n\n                    <td>{data.A11}</td>\n                    <td>{data.A12}</td>\n                    <td>{data.A13}</td>\n                    <td>{data.A14}</td>\n                    <td>{data.A15}</td>\n                    <td>{data.A16}</td>\n                    <td>{data.A17}</td>\n                    <td>{data.A18}</td>\n                    <td>{data.A19}</td>\n                    <td>{data.A20}</td>\n\n                    <td>{data.A21}</td>\n                    <td>{data.A22}</td>\n\n                    <td>{data.RECORD_ID}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      <div className=\"row\">\n            <Map\n              google={google}\n              initialCenter={{\n                lat: reportDetailsWorker[0].LATITUDE,\n                lng: reportDetailsWorker[0].LONGITUDE,\n              }}\n              containerStyle={{ width: \"80vw\", height: \"80vh\" }}\n              // @ts-ignore\n              mapTypeControl={false}\n              streetViewControl={false}\n            >\n              {reportDetailsWorker.map((marker, index) => {\n                return (\n                  <Marker\n                    key={index}\n                    // @ts-ignore\n                    label={`${index + 1}`}\n                    // @ts-ignore\n                    title={`${index + 1} ${marker.RESPONDENT.toLowerCase()} (${\n                      marker.MOBILE\n                    }) ${marker.DATETIME}`}\n                    position={{\n                      lat: marker.LATITUDE,\n                      lng: marker.LONGITUDE,\n                    }}\n                  />\n                );\n              })}\n            </Map>\n          </div>\n    </div>\n  );\n};\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCE1xTn0k-vpSWBSLyfL47GonM-hvX-Y2g\",\n})(GetReportDetails);\n","import React from \"react\";\nimport { HashRouter, Routes, Route } from \"react-router-dom\";\n\nimport Cluster from \"./Maps/cluster\";\nimport { FieldWorkers } from \"./fieldWorkers\";\nimport ActionDetails from \"./Screens/ActionDetails\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Reports from \"./Screens/Reports\";\nimport ReportResults from \"./Screens/ReportResults\";\nimport { GrillDownData } from \"./grillDownData\";\nimport { GetReports } from './getReports';\nimport  GetReportDetails  from './getReportDetails';\nfunction App() {\n  return (\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<FieldWorkers />} />\n        <Route path=\"/details\" element={<Cluster />} />\n        <Route path=\"/actions\" element={<ActionDetails />} />\n        <Route path=\"/reports\" element={<Reports />} />\n        <Route path=\"/reportresults\" element={<ReportResults />} />\n        <Route path=\"/get-assembly-grill-down-data\" element={<GrillDownData />} />\n        <Route path=\"/get-reports\" element={<GetReports />} />\n        <Route path=\"/get-report-details\" element={<GetReportDetails />} />\n      </Routes>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}